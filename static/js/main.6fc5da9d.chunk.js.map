{"version":3,"sources":["images/netflix.png","images/no_image.jpg","components/elements/Header.js","config.js","components/styles/StyledHeroImage.js","components/elements/HeroImage.js","components/styles/StyledGrid.js","components/elements/Grid.js","components/styles/StyledThumb.js","components/elements/MovieThumb.js","components/styles/StyledLoadMoreBtn.js","components/elements/LoadMoreButton.js","components/styles/StyledSpinner.js","components/elements/Spinner.js","hooks/usePopularMoviesFetch.js","hooks/usePopularShowsFetch.js","components/elements/ShowThumb.js","pages/HomePage.js","components/styles/StyledNavigation.js","components/elements/NavigationMovie.js","components/styles/StyledMovieInfo.js","components/elements/MovieInfo.js","helpers.js","components/styles/StyledMovieInfoBar.js","components/elements/MovieInfoBar.js","components/styles/StyledActor.js","components/elements/Actor.js","pages/MoviePage.js","hooks/useMovieFetch.js","hooks/useSimilarMoviesFetch.js","components/styles/StyledSearchBar.js","components/elements/SearchBar.js","pages/MoviesPage.js","hooks/useTopRatedMoviesFetch.js","pages/ShowsPage.js","hooks/useTopRatedShowsFetch.js","components/elements/NavigationShow.js","components/elements/ShowInfo.js","components/elements/ShowInfoBar.js","components/elements/ShowSeasonThumb.js","hooks/useShowFetch.js","pages/ShowPage.js","components/elements/Episode.js","pages/ShowSeasonPage.js","hooks/useShowSeasonFetch.js","pages/GenrePage.js","hooks/useMovieByGenreFetch.js","components/elements/Navigation.js","components/styles/StyledActorInfo.js","components/elements/ActorInfo.js","components/styles/StyledRole.js","components/elements/Role.js","pages/ActorPage.js","hooks/useActorFetch.js","pages/NotFoundPage.js","components/styles/GlobalStyle.js","App.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","HideOnScroll","props","children","window","trigger","useScrollTrigger","target","undefined","Slide","appear","direction","in","Header","classes","React","useState","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","Boolean","history","useHistory","handleMobileMenuClose","renderMobileMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","IconButton","aria-label","onClick","push","className","CssBaseline","AppBar","Toolbar","edge","Typography","variant","noWrap","aria-controls","aria-haspopup","event","currentTarget","API_URL","API_KEY","IMAGE_BASE_URL","SEARCH_BASE_URL","POPULAR_BASE_URL_MOVIES","TOP_RATED_BASE_URL_MOVIES","SEARCH_BASE_URL_SHOWS","TOP_RATED_BASE_URL_SHOWS","POPULAR_BASE_URL_SHOWS","StyledHeroImage","styled","div","image","HeroImage","text","StyledGrid","StyledGridContent","Grid","header","StyledThumb","MovieThumb","movieId","clickable","to","src","alt","StyledLoadMoreBtn","button","LoadMoreButton","callback","type","StyledSpinner","Spinner","usePopularMoviesFetch","searchTerm","movies","state","setState","loading","setLoading","error","setError","fetchPopularMovies","endpoint","a","isLoadMore","fetch","json","movieResult","randomIndex","Math","floor","random","prev","results","heroImage","currentPage","page","totalPages","total_pages","console","useEffect","usePopularShowsFetch","shows","fetchPopularShows","showResult","heroImageShow","currentPageShow","totalPagesShow","ShowThumb","showId","HomePage","loadingShow","errorShow","round","log","heroImageURL","backdrop_path","heroImageTitle","original_title","original_name","heroImageText","overview","style","paddingTop","map","movie","key","poster_path","NoImage","movieName","popularEndpoint","border","show","showName","StyledNavigation","NavigationMovie","formattedMovieName","length","substring","opacity","StyledMovieInfo","backdrop","MovieInfo","vote_average","directors","director","credit_id","name","genres","genre","Chip","label","margin","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","StyledMovieInfoBar","MovieInfoBar","isOnNetflix","time","budget","revenue","homepage","includes","href","Netflix","size","hours","mins","calcTime","StyledActor","Actor","actor","profile_path","character","MoviePage","useParams","fetchData","useCallback","response","status","goBack","moviesResult","creditsEndpoint","creditsResult","crew","filter","member","job","actors","cast","useMovieFetch","movie_id","simliarMovies","fetchSimilarMovies","currentPageSimilar","totalPagesSimilar","useSimilarMoviesFetch","loadingSimilar","errorSimilar","runtime","index","StyledSearchBar","StyledSearchBarContent","SearchBar","timeOut","useRef","placeholder","onChange","value","clearTimeout","current","setTimeout","MoviesPage","topRatedMovies","fetchTopRatedMovies","heroImageTopRated","currentPageTopRated","totalPagesTopRated","useTopRatedMoviesFetch","loadingTopRated","errorTopRated","setSearchTerm","searchEndpoint","ShowsPage","topRatedShows","fetchTopRatedShows","showsResult","useTopRatedShowsFetch","NavigationShow","seasonNumber","formattedShowName","ShowInfo","season","ShowInfoBar","seasons","episodes","firstAirDate","ShowSeasonThumb","useShowFetch","showResults","ShowPage","number_of_seasons","number_of_episodes","first_air_date","season_number","seasonId","Episode","episode","ShowSeasonPage","seasonResults","useShowSeasonFetch","seasonLoading","seasonError","air_date","still_path","GenrePage","genreId","genreName","fetchMoviesByGenre","useMovieByGenreFetch","Navigation","StyledActorInfo","ActorInfo","biography","StyledRole","Role","role","ActorPage","actorId","result","knownforEndpoint","knownForResults","roles","useActorFetch","NotFoundPage","top","textAlign","GlobalStyle","createGlobalStyle","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6fc5da9d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/netflix.d9247b29.png\";","module.exports = __webpack_public_path__ + \"static/media/no_image.31f5bb1d.jpg\";","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Home from '@material-ui/icons/Home';\r\nimport Theaters from '@material-ui/icons/Theaters';\r\nimport Tv from '@material-ui/icons/Tv';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nfunction HideOnScroll(props) {\r\n    const { children, window } = props;\r\n    // Note that you normally won't need to set the window ref as useScrollTrigger\r\n    // will default to window.\r\n    // This is only being set here because the demo is in an iframe.\r\n    const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n  \r\n    return (\r\n      <Slide appear={false} direction=\"down\" in={!trigger}>\r\n        {children}\r\n      </Slide>\r\n    );\r\n  }\r\n  \r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\" onClick={() => history.push('/movies')}>\r\n            <Theaters />\r\n        </IconButton>\r\n        <p>Movies</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\" onClick={() => history.push('/shows')}>\r\n            <Tv />\r\n        </IconButton>\r\n        <p>Shows</p>\r\n      </MenuItem>\r\n\r\n    </Menu>\r\n  );\r\n\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <CssBaseline />\r\n      <HideOnScroll>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={() => history.push('/')}\r\n          >\r\n            <Home  />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            E-TV\r\n          </Typography>\r\n         \r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label=\"Movies\" color=\"inherit\"  onClick={() => history.push('/movies')}>\r\n                <Theaters/>\r\n            </IconButton>\r\n            <IconButton aria-label=\"Shows\" color=\"inherit\" onClick={() => history.push('/shows')}>\r\n                <Tv />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      </HideOnScroll>\r\n      {renderMobileMenu}\r\n    </div>\r\n  );\r\n}","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c9f3c719e4cce4a021ff37d2e89d43ba';\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&query=`;\nconst POPULAR_BASE_URL_MOVIES = `${API_URL}movie/popular?api_key=${API_KEY}`;\nconst TOP_RATED_BASE_URL_MOVIES = `${API_URL}movie/top_rated?api_key=${API_KEY}`;\n\nconst SEARCH_BASE_URL_SHOWS = `${API_URL}search/tv?api_key=${API_KEY}&query=`;\nconst TOP_RATED_BASE_URL_SHOWS = `${API_URL}tv/top_rated?api_key=${API_KEY}`;\nconst POPULAR_BASE_URL_SHOWS = `${API_URL}tv/popular?api_key=${API_KEY}`;\n\n\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE, SEARCH_BASE_URL, SEARCH_BASE_URL_SHOWS, TOP_RATED_BASE_URL_SHOWS, POPULAR_BASE_URL_MOVIES, TOP_RATED_BASE_URL_MOVIES, POPULAR_BASE_URL_SHOWS };\n","import styled from 'styled-components';\n\nexport const StyledHeroImage = styled.div`\n  background: ${props =>\n    `linear-gradient(\n      to bottom, rgba(0,0,0,0)\n      39%,rgba(0,0,0,0)\n      41%,rgba(0,0,0,0.65)\n      100%\n    ),\n    url('${props.image}'), #1c1c1c`};\n  background-size: 100%, cover !important;\n  background-position: center, center !important;\n  width: 100%;\n  height: 600px;\n  position: relative;\n  animation: animateHeroimage 1s;\n\n  .heroimage-content {\n    max-width: 1280px;\n    padding: 20px;\n    margin: 0 auto;\n  }\n\n  .heroimage-text {\n    z-index: 100;\n    max-width: 700px;\n    position: absolute;\n    bottom: 40px;\n    margin-right: 20px;\n    min-height: 100px;\n    background: rgba(0, 0, 0, 0);\n    color: #fff;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 38px;\n        color: #fff;\n      }\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      line-height: 26px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 16px;\n        line-height: 20px;\n        color: #fff;\n      }\n    }\n\n    @media screen and (max-width: 720px) {\n      max-width: 100%;\n    }\n  }\n\n  @keyframes animateHeroimage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react';\r\n\r\nimport { StyledHeroImage } from '../styles/StyledHeroImage';\r\n\r\nconst HeroImage = ({ image, title, text }) => {\r\n    return (\r\n        <StyledHeroImage image={image}>\r\n            <div className=\"heroimage-content\">\r\n                <div className=\"heroimage-text\">\r\n                    <h1>{title}</h1>\r\n                    <p>{text}</p>\r\n                </div>\r\n            </div>\r\n        </StyledHeroImage>\r\n    )\r\n}\r\n\r\nexport default HeroImage;\r\n","import styled from 'styled-components';\n\nexport const StyledGrid = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n\n  h1 {\n    font-family: 'Abel', sans-serif;\n    font-size: 42px;\n\n    @media screen and (max-width: 768px) {\n      font-size: 22px;\n    }\n  }\n`;\n\nexport const StyledGridContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(100px, 1fr));\n  grid-gap: 40px;\n  position: relative;\n\n  .grid-element {\n    animation: animateGrid 0.5s;\n  }\n\n  @keyframes animateGrid {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: repeat(4, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 600px) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 375px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\n","import React from 'react';\r\n\r\nimport { StyledGrid, StyledGridContent } from '../styles/StyledGrid';\r\n\r\nconst Grid = ({ header, children }) => (\r\n    <StyledGrid>\r\n        <h1>{header}</h1>\r\n        <StyledGridContent>{children}</StyledGridContent>\r\n    </StyledGrid>\r\n)\r\n\r\n\r\nexport default Grid;","import styled from 'styled-components';\n\nexport const StyledThumb = styled.div`\n  img {\n    width: 100%;\n    height: auto;\n    /* max-height: 350px; */\n    transition: all 0.3s;\n    object-fit: cover;\n    border-radius: 20px;\n\n    :hover {\n      opacity: 0.8;\n    }\n\n    /* @media screen and (max-width: 1024px) {\n      height: 300px;\n    }\n\n    @media screen and (max-width: 768px) {\n      height: 350px;\n    }\n\n    @media screen and (max-width: 600px) {\n      max-height: 300px;\n    }\n\n    @media screen and (max-width: 375px) {\n      max-height: 450px;\n    } */\n\n    .clickable {\n      cursor: pointer;\n    }\n  }\n`;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { StyledThumb } from '../styles/StyledThumb';\r\n\r\nconst MovieThumb = ({ image, movieId, clickable }) => (\r\n  <StyledThumb>\r\n    {clickable ? (\r\n      <Link to={`/movies/${movieId}`}>\r\n        <img className=\"clickable\" src={image} alt=\"moviethumb\" />\r\n      </Link>\r\n    ) : (\r\n      <img src={image} alt=\"moviethumb\" />\r\n    )}\r\n  </StyledThumb>\r\n)\r\n\r\nexport default MovieThumb;\r\n","import styled from 'styled-components';\n\nexport const StyledLoadMoreBtn = styled.button`\n  background: #000;\n  width: 25%;\n  min-width: 200px;\n  height: 70px;\n  color: #fff;\n  cursor: pointer;\n  transition: all 0.3s;\n  border-radius: 40px;\n  font-family: 'Abel', sans-serif;\n  font-size: 28px;\n  max-width: 1280px;\n  display: block;\n  margin: 20px auto;\n  padding: 0 20px;\n  outline: none;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","import React from 'react';\r\n\r\nimport { StyledLoadMoreBtn } from '../styles/StyledLoadMoreBtn';\r\n\r\nconst LoadMoreButton = ({ text, callback}) => (\r\n    <StyledLoadMoreBtn type=\"button\" onClick={callback}>\r\n        {text}\r\n    </StyledLoadMoreBtn>\r\n)\r\n\r\n\r\nexport default LoadMoreButton;","import styled from 'styled-components';\n\nexport const StyledSpinner = styled.div`\n  border: 5px solid #f3f3f3; /* Light grey */\n  border-top: 5px solid #16d47b; /* Blue */\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react';\r\n\r\nimport { StyledSpinner } from '../styles/StyledSpinner';\r\n\r\nconst Spinner = () => ( <StyledSpinner /> )\r\n\r\nexport default Spinner;","import { useState, useEffect } from 'react';\r\nimport { API_URL, API_KEY } from '../config';\r\n\r\nexport const usePopularMoviesFetch = searchTerm => {\r\n    const [state, setState] = useState({ movies: [] });\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n  \r\n    const fetchPopularMovies = async endpoint => {\r\n      setError(false);\r\n      setLoading(true);\r\n  \r\n      const isLoadMore = endpoint.search('page');\r\n  \r\n      try {\r\n        const movieResult = await (await fetch(endpoint)).json();\r\n        const randomIndex = Math.floor(Math.random() * 20)\r\n\r\n        setState(prev => ({\r\n          ...prev,\r\n          movies:\r\n            isLoadMore !== -1\r\n              ? [...prev.movies, ...movieResult.results]\r\n              : [...movieResult.results],\r\n          heroImage: prev.heroImage || movieResult.results[randomIndex],\r\n          currentPage: movieResult.page,\r\n          totalPages: movieResult.total_pages,\r\n        }));\r\n\r\n      } catch (error) {\r\n        setError(true);\r\n        console.error(error);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchPopularMovies(`${API_URL}movie/popular?api_key=${API_KEY}`)\r\n    }, []);\r\n\r\n    return [{ state, loading, error }, fetchPopularMovies]\r\n}","import { useState, useEffect } from 'react';\r\nimport { API_URL, API_KEY } from '../config';\r\n\r\nexport const usePopularShowsFetch = searchTerm => {\r\n    const [state, setState] = useState({ shows: [] });\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n  \r\n    const fetchPopularShows = async endpoint => {\r\n      setError(false);\r\n      setLoading(true);\r\n  \r\n      const isLoadMore = endpoint.search('page');\r\n  \r\n      try {\r\n        const showResult = await (await fetch(endpoint)).json();\r\n        const randomIndex = Math.floor(Math.random() * 20)\r\n        setState(prev => ({\r\n          ...prev,\r\n          shows:\r\n            isLoadMore !== -1\r\n              ? [...prev.shows, ...showResult.results]\r\n              : [...showResult.results],\r\n          heroImageShow: prev.heroImageShow || showResult.results[randomIndex],\r\n          currentPageShow: showResult.page,\r\n          totalPagesShow: showResult.total_pages,\r\n        }));\r\n\r\n      } catch (error) {\r\n        setError(true);\r\n        console.error(error);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchPopularShows(`${API_URL}tv/popular?api_key=${API_KEY}`)\r\n    }, []);\r\n\r\n    return [{ state, loading, error }, fetchPopularShows]\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { StyledThumb } from '../styles/StyledThumb';\r\n\r\nconst ShowThumb = ({ image, showId, clickable }) => (\r\n  <StyledThumb>\r\n    {clickable ? (\r\n      <Link to={`/shows/${showId}`}>\r\n        <img className=\"clickable\" src={image} alt=\"show-thumb\" />\r\n      </Link>\r\n    ) : (\r\n      <img src={image} alt=\"show-thumb\" />\r\n    )}\r\n  </StyledThumb>\r\n)\r\n\r\nexport default ShowThumb;\r\n","import React from 'react';\r\n\r\n// API CONSTANTS\r\nimport { IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE, SEARCH_BASE_URL, POPULAR_BASE_URL_MOVIES, POPULAR_BASE_URL_SHOWS } from '../config';\r\n\r\n// Components\r\nimport HeroImage from '../components/elements/HeroImage';\r\nimport Grid from '../components/elements/Grid';\r\nimport MovieThumb from '../components/elements/MovieThumb';\r\nimport LoadMoreButton from '../components/elements/LoadMoreButton';\r\nimport Spinner from '../components/elements/Spinner';\r\n\r\n// Hooks\r\nimport { usePopularMoviesFetch } from '../hooks/usePopularMoviesFetch';\r\nimport { usePopularShowsFetch } from '../hooks/usePopularShowsFetch';\r\n\r\nimport NoImage from '../images/no_image.jpg';\r\nimport ShowThumb from '../components/elements/ShowThumb';\r\n\r\nconst HomePage = () => {\r\n   \r\n    const [{ state: { movies, heroImage, currentPage, totalPages }, loading, error }, fetchPopularMovies ] = usePopularMoviesFetch();\r\n    const [{ state: { shows, heroImageShow, currentPageShow, totalPagesShow }, loadingShow, errorShow }, fetchPopularShows ] = usePopularShowsFetch();\r\n\r\n    const randomIndex = Math.round(Math.random())\r\n\r\n    if (loading) {\r\n        console.log('loading')\r\n    }\r\n   \r\n    if (!movies[0] || !shows[0])  return <Spinner /> \r\n\r\n    if (error) return <div>Something went wrong...</div>\r\n    \r\n    const loadMoreMovies = () => {\r\n        const popularEndpoint = `${POPULAR_BASE_URL_MOVIES}&page=${currentPage + 1}`;\r\n        fetchPopularMovies(popularEndpoint);\r\n    }\r\n\r\n    const loadMoreShows = () => {\r\n        const endpoint = `${POPULAR_BASE_URL_SHOWS}&page=${currentPage + 1}`;\r\n        fetchPopularShows(endpoint);\r\n    }\r\n\r\n    const heroImageURL = randomIndex === 0 ? `${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}` : `${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImageShow.backdrop_path}`;\r\n    const heroImageTitle = randomIndex === 0 ? heroImage.original_title: heroImageShow.original_name;\r\n    const heroImageText = randomIndex === 0 ? heroImage.overview : heroImageShow.overview;\r\n\r\n    return (\r\n        <div style={{paddingTop: '60px'}}>\r\n            \r\n            <HeroImage \r\n                image={heroImageURL}\r\n                title={heroImageTitle}\r\n                text={heroImageText}\r\n            />\r\n              \r\n           \r\n            <Grid header='Popular Movies'>\r\n                {\r\n                    movies.map(movie => (\r\n                        <MovieThumb \r\n                            key={movie.id} \r\n                            clickable \r\n                            image={movie.poster_path \r\n                                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                                : NoImage} \r\n                            movieId={movie.id}\r\n                            movieName={movie.original_title}\r\n                        />\r\n                    ))\r\n                }\r\n            </Grid>\r\n            {\r\n                loading && <Spinner/>\r\n            }\r\n            { currentPage < totalPages && !loading && (\r\n                <LoadMoreButton text=\"Load More\" callback={loadMoreMovies} />\r\n            )}\r\n            <hr style={{height: '50px', border: 'none', backgroundColor: '#333'}} />\r\n\r\n            {/** SHOWS  **/}\r\n            <Grid header='Popular Shows'>\r\n                {\r\n                    shows.map(show => (\r\n                        <ShowThumb \r\n                            key={show.id} \r\n                            clickable \r\n                            image={show.poster_path \r\n                                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${show.poster_path}`\r\n                                : NoImage} \r\n                            showId={show.id}\r\n                            showName={show.original_title}\r\n                        />\r\n                    ))\r\n                }\r\n            </Grid>\r\n            {\r\n                loadingShow && <Spinner/>\r\n            }\r\n            { !loadingShow && (\r\n                <LoadMoreButton text=\"Load More\" callback={loadMoreShows} />\r\n            )}\r\n            <hr style={{height: '50px', border: 'none', backgroundColor: '#333'}} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import styled from 'styled-components';\n\nexport const StyledNavigation = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 70px;\n  background: #353535;\n  color: #fff;\n\n  .navigation-content {\n    max-width: 1280px;\n    margin: 0 auto;\n    padding: 0 20px;\n    width: 100%;\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      float: left;\n      color: #fff;\n      padding-right: 10px;\n      text-decoration: none;\n\n      @media screen and (max-width: 768px) {\n        font-size: 16px;\n      }\n    }\n  }\n`;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\n// Styled Components\r\nimport { StyledNavigation } from '../styles/StyledNavigation';\r\n\r\n// TODO: \r\n//  eclipse movie name capping it at 10 chars long\r\n//\r\n\r\nconst NavigationMovie = ({ title }) => {\r\n\r\n    \r\n    let formattedMovieName = '';\r\n    const movieName = `${title}`;\r\n    const movieNameLength = movieName.length;\r\n    movieNameLength > 14 ? formattedMovieName = movieName.substring(0, 14) + '...': formattedMovieName = movieName;    \r\n\r\n    return (\r\n        <StyledNavigation>\r\n            <div className=\"navigation-content\">\r\n                <Link to='/'>\r\n                    <p>Home</p>\r\n                </Link>\r\n\r\n                <p style={{opacity: '0.6'}}>|</p>\r\n\r\n                <Link to='/movies'>\r\n                    <p>Movies</p>\r\n                </Link>\r\n                \r\n                <p style={{opacity: '0.6'}}>|</p>\r\n                \r\n                <p style={{opacity: '0.6'}}>{formattedMovieName}</p>\r\n            </div>\r\n        </StyledNavigation>\r\n    )\r\n}\r\n\r\nexport default NavigationMovie;","import styled from 'styled-components';\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\n\nexport const StyledMovieInfo = styled.div`\n  background: ${props =>\n    props.backdrop\n      ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.backdrop}')`\n      : '#000'};\n  background-size: cover !important;\n  background-position: center !important;\n  width: 100%;\n  padding: 40px 20px;\n  box-sizing: border-box;\n  animation: animateMovieinfo 1s;\n\n  .movieinfo-content {\n    max-width: 1280px;\n    min-height: 450px;\n    margin: 0 auto;\n    background: rgb(0, 0, 0, 0.7);\n    border-radius: 20px;\n    position: relative;\n  }\n\n  .movieinfo-thumb {\n    width: 300px;\n    float: left;\n\n    @media screen and (max-width: 768px) {\n      width: 100% !important;\n    }\n  }\n\n  .movieinfo-text {\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 40px;\n    color: #fff;\n    overflow: hidden;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      margin: 0;\n\n      @media screen and (max-width: 1000px) {\n        font-size: 32px !important;\n      }\n    }\n\n    h3 {\n      font-size: 16px;\n      line-height: 0;\n      margin-top: 30px;\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 18px;\n      line-height: 26px;\n    }\n  }\n\n  .rating-director {\n    display: flex;\n    justify-content: flex-start;\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 25px;\n    margin: 0px 0 0 0;\n  }\n\n  .director {\n    margin: 0 40px 0 40px;\n\n    p {\n      margin: 0;\n    }\n  }\n\n  .genre {\n    margin: 0 40px 0 40px;\n\n    p {\n      margin: 0;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    min-height: 600px;\n    height: auto;\n  }\n\n  @keyframes animateMovieinfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Chip } from \"@material-ui/core\";\r\nimport NoImage from \"../../images/no_image.jpg\";\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\";\r\n\r\nimport MovieThumb from \"./MovieThumb\";\r\n\r\nimport { StyledMovieInfo } from \"../styles/StyledMovieInfo\";\r\n\r\nconst MovieInfo = ({ movie }) => {\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <StyledMovieInfo backdrop={movie.backdrop_path}>\r\n      <div className=\"movieinfo-content\">\r\n        <div className=\"movieinfo-thumb\">\r\n          <MovieThumb\r\n            image={\r\n              movie.poster_path\r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                : NoImage\r\n            }\r\n            clickable={false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"movieinfo-text\">\r\n          <h1>{movie.title}</h1>\r\n          <h3>Plot</h3>\r\n          <p>{movie.overview}</p>\r\n\r\n          <div className=\"rating-director\">\r\n            <div>\r\n              <h3>IMDB RATING</h3>\r\n              <div className=\"score\">{movie.vote_average}</div>\r\n            </div>\r\n\r\n            <div className=\"director\">\r\n              <h3>DIRECTOR{movie.directors.length > 1 ? \"S\" : \"\"}</h3>\r\n              {movie.directors.map((director) => (\r\n                <p key={director.credit_id}>{director.name}</p>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"genres\">\r\n              <h3>GENRE{movie.genres.length > 1 ? \"S\" : \"\"}</h3>\r\n              {movie.genres.map((genre) => (\r\n                <Chip\r\n                  color=\"default\"\r\n                  key={genre.id}\r\n                  label={genre.name}\r\n                  clickable\r\n                  style={{ margin: \"5px\" }}\r\n                  onClick={() => history.push(`/genre/${genre.name}/${genre.id}`)}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </StyledMovieInfo>\r\n  );\r\n};\r\n\r\nexport default MovieInfo;\r\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n","import styled from 'styled-components';\n\nexport const StyledMovieInfoBar = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: 100px;\n  height: auto;\n  background: #1c1c1c;\n  padding: 20px;\n  box-sizing: border-box;\n  font-family: 'Abel', sans-serif;\n  font-size: 20px;\n\n  .movieinfobar-content {\n    max-width: 1280px;\n    width: 100%;\n    margin: 0 auto;\n    color: #fff;\n  }\n\n  .movieinfobar-content-col {\n    float: left;\n    width: 33.33%;\n    box-sizing: border-box;\n    padding: 10px 20px 0 0;\n  }\n\n  .movieinfobar-netflix {\n    justify-content: center;\n    display: flex;\n    width: 100%;\n    box-sizing: border-box;\n  }\n\n  .movieinfobar-info {\n    padding: 5px 0 0 10px;\n    float: left;\n  }\n\n  .fa-time,\n  .fa-revenue {\n    float: left;\n    margin-top: -4px;\n  }\n\n  .fa-budget {\n    float: left;\n    margin-top: -3px;\n  }\n\n  @media screen and (max-width: 768px) {\n    .fa-time,\n    .fa-revenue,\n    .fa-budget {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 425px) {\n    font-size: 14px;\n  }\n`;\n","import React from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\n\r\nimport Netflix from '../../images/netflix.png'\r\n\r\nimport { calcTime, convertMoney } from '../../helpers';\r\n\r\nimport { StyledMovieInfoBar } from '../styles/StyledMovieInfoBar';\r\n\r\nconst MovieInfoBar = ({ time, budget, revenue, homepage }) => {\r\n\r\n    let isOnNetflix = false;\r\n    isOnNetflix = `${homepage}`.includes('netflix');\r\n\r\n    return (\r\n        <StyledMovieInfoBar>      \r\n                {\r\n                    !isOnNetflix ? (\r\n                        <div className=\"movieinfobar-content\">\r\n                            <div className=\"movieinfobar-content-col\">\r\n                                <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n                                <span className=\"movieinfobar-info\">\r\n                                    Running Time: {calcTime(time)}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"movieinfobar-content-col\">\r\n                                <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\r\n                                <span className=\"movieinfobar-info\">\r\n                                    Budget: {convertMoney(budget)}\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div className=\"movieinfobar-content-col\">\r\n                            <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\r\n                                <span className=\"movieinfobar-info\">\r\n                                    Revenue: {convertMoney(revenue)}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n    \r\n                        <div className=\"movieinfobar-netflix\">\r\n                            <span className=\"movieinfobar-info\">\r\n                                <a href={`${homepage}`} target=\"_blank\">\r\n                                    <img src={Netflix} alt=\"watch on netflix\" style={{width: '120px'}}/>\r\n                                </a>\r\n                            </span>\r\n                        </div>\r\n                        \r\n                    )\r\n                }\r\n        </StyledMovieInfoBar>\r\n    )\r\n}\r\n\r\n\r\nexport default MovieInfoBar;","import styled from 'styled-components';\n\nexport const StyledActor = styled.div`\n  font-family: 'Abel', sans-serif;\n  color: #fff;\n  background: #1c1c1c;\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n\n  img {\n    display: block;\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 15px;\n  }\n\n  .actor-name {\n    display: block;\n    font-size: 18px;\n    margin: 10px 0 0 0;\n  }\n\n  .actor-character {\n    display: block;\n    font-size: 16px;\n    margin: 0 0 10px 0;\n  }\n`;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport NoImage from '../../images/no_image.jpg';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\n\r\nimport { StyledActor } from '../styles/StyledActor';\r\n\r\nconst Actor = ({ actor, clickable }) =>  (\r\n    <StyledActor>\r\n        {clickable ? (\r\n            <Link to={`/actors/${actor.id}`}>\r\n                <img \r\n                src={actor.profile_path \r\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}` \r\n                    : NoImage } alt=\"actor-thumb\" \r\n                />\r\n            </Link>\r\n        ) : (\r\n            <img \r\n            src={actor.profile_path \r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}` \r\n                : NoImage } alt=\"actor-thumb\" \r\n            />\r\n        )}\r\n  \r\n        <span className=\"actor-name\">{actor.name}</span>\r\n        <span className=\"actor-character\">{actor.character}</span>\r\n    </StyledActor>\r\n)\r\n\r\n\r\nexport default Actor;","import React from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\r\nimport NoImage from '../images/no_image.jpg';\r\n\r\n// Components\r\nimport NavigationMovie from '../components/elements/NavigationMovie';\r\nimport MovieInfo from '../components/elements/MovieInfo'\r\nimport MovieInfoBar from '../components/elements/MovieInfoBar'\r\nimport Actor from '../components/elements/Actor'\r\n\r\nimport Grid from '../components/elements/Grid';\r\nimport Spinner from '../components/elements/Spinner';\r\n\r\n// Hooks\r\nimport { useMovieFetch } from '../hooks/useMovieFetch';\r\nimport { useSimilarMoviesFetch } from '../hooks/useSimilarMoviesFetch';\r\nimport MovieThumb from '../components/elements/MovieThumb';\r\n\r\nconst MoviePage = () => {\r\n\r\n    let { movieId } = useParams();\r\n    const [movie, loading, error] = useMovieFetch(movieId);\r\n    const [{ state: {simliarMovies}, loadingSimilar, errorSimilar}] = useSimilarMoviesFetch(movieId);\r\n\r\n    if (error) return <div>Something went wrong...</div>;\r\n    if (loading) return <Spinner/> ;\r\n\r\n    return (\r\n        <div style={{paddingTop: '60px'}}>\r\n            <NavigationMovie title={movie.original_title} />\r\n            <MovieInfo movie={movie} />\r\n            <MovieInfoBar time={movie.runtime} homepage={movie.homepage} budget={movie.budget} revenue={movie.revenue}/>\r\n            <Grid header=\"Actors\">\r\n                {\r\n                    movie.actors.map((actor, index) => (\r\n                        index < 10 &&\r\n                            <Actor key={actor.credit_id} actor={actor} clickable />\r\n                    ))\r\n                }\r\n            </Grid>\r\n            <hr style={{height: '50px', border: 'none', backgroundColor: '#333'}} />\r\n            <Grid header=\"Similar Movies\">\r\n                {\r\n                    simliarMovies.map((movie, index) => (\r\n                        (movie.id != movieId) && index < 20 && \r\n                            <MovieThumb \r\n                                key={movie.id} \r\n                                clickable \r\n                                image={movie.poster_path \r\n                                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                                    : NoImage} \r\n                                movieId={movie.id}\r\n                                movieName={movie.original_title}\r\n                        />\r\n                    ))\r\n                }\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MoviePage;","import { useEffect, useCallback, useState } from 'react';\r\nimport { API_URL, API_KEY } from '../config';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const useMovieFetch = (movieId) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [state, setState] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setError(false);\r\n        setLoading(true);\r\n\r\n        try {\r\n            const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\r\n            const response = await fetch(endpoint)\r\n            if (response.status === 404) {\r\n                history.goBack();\r\n            }\r\n            const moviesResult = await response.json();\r\n            const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n            const creditsResult = await (await fetch(creditsEndpoint)).json();\r\n            const directors = creditsResult.crew.filter(\r\n                member => member.job === 'Director'\r\n            );\r\n            \r\n            setState({\r\n                ...moviesResult,\r\n                actors: creditsResult.cast,\r\n                directors\r\n            });\r\n            \r\n        } catch (error) {\r\n            setError(true);\r\n            console.error(error)\r\n        }\r\n\r\n        setLoading(false);\r\n    }, [movieId])\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [fetchData]);\r\n\r\n    return [state, loading, error];\r\n}","import { useState, useEffect } from 'react';\r\nimport { API_URL, API_KEY } from '../config';\r\n\r\nexport const useSimilarMoviesFetch = (movie_id) => {\r\n    const [state, setState] = useState({ simliarMovies: [] });\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n  \r\n    const fetchSimilarMovies = async (movieId) => {\r\n      setError(false);\r\n      setLoading(true);\r\n      \r\n      const endpoint = `${API_URL}movie/${movie_id}/similar?api_key=${API_KEY}`;\r\n      const isLoadMore = endpoint.search('page');\r\n  \r\n      try {\r\n        const movieResult = await (await fetch(endpoint)).json();\r\n\r\n        setState(prev => ({\r\n          ...prev,\r\n          simliarMovies:\r\n            isLoadMore !== -1\r\n              ? [...prev.simliarMovies, ...movieResult.results]\r\n              : [...movieResult.results],\r\n          currentPageSimilar: movieResult.page,\r\n          totalPagesSimilar: movieResult.total_pages,\r\n        }));\r\n\r\n      } catch (error) {\r\n        setError(true);\r\n        console.error(error);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        fetchSimilarMovies(`${API_URL}movie/${movie_id}/similar?api_key=${API_KEY}`)\r\n    }, []);\r\n\r\n    return [{ state, loading, error }, fetchSimilarMovies]\r\n}","import styled from 'styled-components';\n\nexport const StyledSearchBar = styled.div`\n  width: 100%;\n  height: 105px;\n  background: #1c1c1c;\n  padding: 25px 20px 0px 20px;\n  box-sizing: border-box;\n  color: #fff;\n`;\n\nexport const StyledSearchBarContent = styled.div`\n  max-width: 1280px;\n  width: 100%;\n  height: 55px;\n  background: #353535;\n  margin: 0 auto;\n  border-radius: 40px;\n  position: relative;\n  color: #fff;\n\n  .fa-search {\n    position: absolute;\n    left: 20px;\n    top: 12px;\n    color: #fff;\n    z-index: 1000;\n  }\n\n  input {\n    font-family: 'Abel', sans-serif;\n    font-size: 28px;\n    position: absolute;\n    left: 0px;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: #fff;\n    box-sizing: border-box;\n\n    :focus {\n      outline: none;\n    }\n\n    @media screen and (max-width: 720px) {\n      font-size: 28px;\n    }\n  }\n`;\n","import React, { useState, useRef } from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\n\r\nimport { StyledSearchBar, StyledSearchBarContent } from '../styles/StyledSearchBar';\r\n\r\nconst SearchBar = ({ title, callback }) => {\r\n\r\n    const [state, setState] = useState('');\r\n    const timeOut = useRef(null);\r\n\r\n    const doSearch = (event) => {\r\n        const { value } = event.target;\r\n\r\n        clearTimeout(timeOut.current);\r\n        setState(value);\r\n\r\n        timeOut.current = setTimeout(() => {\r\n            callback(value);\r\n        }, 500);\r\n    }\r\n\r\n    return (\r\n        <StyledSearchBar>\r\n            <StyledSearchBarContent>\r\n                <FontAwesome className=\"fa-search\" name='search' size='2x' />\r\n                <input type='text' placeholder={title} onChange={doSearch} value={state} />\r\n            </StyledSearchBarContent>\r\n        </StyledSearchBar>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\n\r\n// API CONSTANTS\r\nimport { IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE, SEARCH_BASE_URL, POPULAR_BASE_URL_MOVIES, TOP_RATED_BASE_URL_MOVIES } from '../config';\r\n\r\n// Components\r\nimport HeroImage from '../components/elements/HeroImage';\r\nimport SearchBar from '../components/elements/SearchBar';\r\nimport Grid from '../components/elements/Grid';\r\nimport MovieThumb from '../components/elements/MovieThumb';\r\nimport LoadMoreButton from '../components/elements/LoadMoreButton';\r\nimport Spinner from '../components/elements/Spinner';\r\n\r\n// Hooks\r\nimport { usePopularMoviesFetch } from '../hooks/usePopularMoviesFetch';\r\nimport { useTopRatedMoviesFetch } from '../hooks/useTopRatedMoviesFetch';\r\n\r\nimport NoImage from '../images/no_image.jpg';\r\n\r\nconst MoviesPage = () => {\r\n   \r\n    const [{ state: { movies, heroImage, currentPage, totalPages }, loading, error }, fetchPopularMovies ] = usePopularMoviesFetch();\r\n    const [{ state: { topRatedMovies, heroImageTopRated, currentPageTopRated, totalPagesTopRated }, loadingTopRated, errorTopRated }, fetchTopRatedMovies ] = useTopRatedMoviesFetch();\r\n    const [searchTerm, setSearchTerm] = React.useState('');\r\n   \r\n    if (!movies[0] || !topRatedMovies[0])  return <Spinner /> \r\n    if (error || errorTopRated) return <div>Something went wrong...</div>\r\n    \r\n    const loadMoreMovies = () => {\r\n        const searchEndpoint = `${SEARCH_BASE_URL}${searchTerm}&page=${currentPage + 1}`;\r\n        const popularEndpoint = `${POPULAR_BASE_URL_MOVIES}&page=${currentPage + 1}`;\r\n\r\n        const endpoint = searchTerm ? searchEndpoint : popularEndpoint;\r\n        fetchPopularMovies(endpoint);\r\n    }\r\n    const loadMoreTopRatedMovies = () => {\r\n        const endpoint = `${TOP_RATED_BASE_URL_MOVIES}&page=${currentPageTopRated + 1}`;\r\n        fetchTopRatedMovies(endpoint);\r\n    }\r\n    \r\n    const searchMovies = search => {\r\n        const endpoint = search ? SEARCH_BASE_URL + search : POPULAR_BASE_URL_MOVIES;\r\n        setSearchTerm(search);\r\n        fetchPopularMovies(endpoint);\r\n    }\r\n\r\n    const heroImageURL = `${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`;\r\n    const heroImageTitle = heroImage.original_title;\r\n    const heroImageText = heroImage.overview;\r\n\r\n    return (\r\n        <div style={{paddingTop: '60px'}}>\r\n            {\r\n                !searchTerm && (\r\n                    <HeroImage \r\n                        image={heroImageURL}\r\n                        title={heroImageTitle}\r\n                        text={heroImageText}\r\n                    />\r\n                )\r\n            }\r\n            <SearchBar title=\"Seach Movies...\" callback={searchMovies} />\r\n            <Grid header={searchTerm ? searchTerm : 'Popular Movies'}>\r\n                {\r\n                    movies.map(movie => (\r\n                        <MovieThumb \r\n                            key={movie.id} \r\n                            clickable \r\n                            image={movie.poster_path \r\n                                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                                : NoImage} \r\n                            movieId={movie.id}\r\n                            movieName={movie.original_title}\r\n                        />\r\n                    ))\r\n                }\r\n            </Grid>\r\n            {\r\n                loading && <Spinner/>\r\n            }\r\n            { currentPage < totalPages && !loading && \r\n                <LoadMoreButton text=\"Load More\" callback={loadMoreMovies} />\r\n            }\r\n            <hr style={{height: '50px', border: 'none', backgroundColor: '#333'}} />\r\n\r\n            {\r\n                !searchTerm && (\r\n                    <Grid header={'Top Rated Movies'}>\r\n                        {\r\n                            topRatedMovies.map(movie => (\r\n                                <MovieThumb \r\n                                    key={movie.id} \r\n                                    clickable \r\n                                    image={movie.poster_path \r\n                                        ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                                        : NoImage} \r\n                                    movieId={movie.id}\r\n                                    movieName={movie.original_title}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </Grid>\r\n                )\r\n            }\r\n            { currentPageTopRated < totalPagesTopRated && !loadingTopRated && !searchTerm && \r\n                \r\n                <LoadMoreButton text=\"Load More\" callback={loadMoreTopRatedMovies} />\r\n                \r\n            }\r\n            {\r\n                loadingTopRated && <Spinner/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MoviesPage;","import { useState, useEffect } from 'react';\r\nimport { API_URL, API_KEY } from '../config';\r\n\r\nexport const useTopRatedMoviesFetch = searchTerm => {\r\n    const [state, setState] = useState({ topRatedMovies: [] });\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n  \r\n    const fetchTopRatedMovies = async endpoint => {\r\n      setError(false);\r\n      setLoading(true);\r\n  \r\n      const isLoadMore = endpoint.search('page');\r\n  \r\n      try {\r\n        const movieResult = await (await fetch(endpoint)).json();\r\n\r\n        setState(prev => ({\r\n          ...prev,\r\n          topRatedMovies:\r\n            isLoadMore !== -1\r\n              ? [...prev.topRatedMovies, ...movieResult.results]\r\n              : [...movieResult.results],\r\n          heroImageTopRated: prev.heroImageTopRated || movieResult.results[0],\r\n          currentPageTopRated: movieResult.page,\r\n          totalPagesTopRated: movieResult.total_pages,\r\n        }));\r\n\r\n      } catch (error) {\r\n        setError(true);\r\n        console.error(error);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fetchTopRatedMovies(`${API_URL}movie/top_rated?api_key=${API_KEY}`)\r\n    }, []);\r\n\r\n    return [{ state, loading, error }, fetchTopRatedMovies]\r\n}","import React from 'react';\r\n\r\n// API CONSTANTS\r\nimport { IMAGE_BASE_URL, BACKDROP_SIZE, SEARCH_BASE_URL_SHOWS, POSTER_SIZE, POPULAR_BASE_URL_SHOWS, TOP_RATED_BASE_URL_SHOWS } from '../config';\r\n\r\n// Components\r\nimport HeroImage from '../components/elements/HeroImage';\r\nimport SearchBar from '../components/elements/SearchBar';\r\nimport Grid from '../components/elements/Grid';\r\nimport LoadMoreButton from '../components/elements/LoadMoreButton';\r\nimport Spinner from '../components/elements/Spinner';\r\nimport ShowThumb from '../components/elements/ShowThumb';\r\n\r\n// Hooks\r\nimport { usePopularShowsFetch } from '../hooks/usePopularShowsFetch';\r\nimport { useTopRatedShowsFetch } from '../hooks/useTopRatedShowsFetch';\r\n\r\nimport NoImage from '../images/no_image.jpg';\r\n\r\nconst ShowsPage = () => {\r\n   \r\n    const [{ state: { shows, heroImageShow, currentPageShow, totalPagesShow }, loadingShow, errorShow }, fetchPopularShows ] = usePopularShowsFetch();\r\n    const [{ state: { topRatedShows, heroImageTopRated, currentPageTopRated, totalPagesTopRated }, loadingTopRated, errorTopRated }, fetchTopRatedShows ] = useTopRatedShowsFetch();\r\n    const [searchTerm, setSearchTerm] = React.useState('');\r\n\r\n    if (!shows[0] || !topRatedShows[0])  return <Spinner /> \r\n    if (errorShow || errorTopRated) return <div>Something went wrong...</div>\r\n    \r\n    const loadMoreShows = () => {\r\n        const endpoint = `${POPULAR_BASE_URL_SHOWS}&page=${currentPageShow + 1}`;\r\n        fetchPopularShows(endpoint);\r\n    }\r\n\r\n    const loadMoreTopRatedShows = () => {\r\n        const endpoint = `${TOP_RATED_BASE_URL_SHOWS}&page=${currentPageTopRated + 1}`;\r\n        fetchTopRatedShows(endpoint);\r\n    }\r\n\r\n    const searchShows = search => {\r\n        const endpoint = search ? SEARCH_BASE_URL_SHOWS + search : POPULAR_BASE_URL_SHOWS;\r\n        setSearchTerm(search);\r\n        fetchPopularShows(endpoint);\r\n    }\r\n\r\n    const heroImageURL = `${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImageShow.backdrop_path}`;\r\n    const heroImageTitle = heroImageShow.original_name;\r\n    const heroImageText = heroImageShow.overview;\r\n\r\n    return (\r\n        <div style={{paddingTop: '60px'}}>\r\n            {\r\n                !searchTerm && (\r\n                    <HeroImage \r\n                        image={heroImageURL}\r\n                        title={heroImageTitle}\r\n                        text={heroImageText}\r\n                    />\r\n                )\r\n            }\r\n            <SearchBar title=\"Search Shows...\" callback={searchShows} />\r\n\r\n            <Grid header={searchTerm ? searchTerm : 'Popular Shows'}>\r\n            {\r\n                shows.map(show => (\r\n                    <ShowThumb \r\n                        key={show.id} \r\n                        clickable \r\n                        image={show.poster_path \r\n                            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${show.poster_path}`\r\n                            : NoImage} \r\n                        showId={show.id}\r\n                        showName={show.original_title}\r\n                    />\r\n                ))\r\n            }\r\n            </Grid>\r\n            {\r\n                loadingShow && <Spinner/>\r\n            }\r\n            {   currentPageShow < totalPagesShow && !loadingShow && \r\n                    <LoadMoreButton text=\"Load More\" callback={loadMoreShows} />\r\n            }\r\n            <hr style={{height: '50px', border: 'none', backgroundColor: '#333'}} />\r\n            {\r\n                !searchTerm && (\r\n                    <Grid header={'Top Rated Shows'}>\r\n                        {\r\n                            topRatedShows.map(show => (\r\n                                <ShowThumb \r\n                                    key={show.id} \r\n                                    clickable \r\n                                    image={show.poster_path \r\n                                        ? `${IMAGE_BASE_URL}${POSTER_SIZE}${show.poster_path}`\r\n                                        : NoImage} \r\n                                    showId={show.id}\r\n                                    showName={show.original_title}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </Grid>\r\n                )\r\n            }\r\n            { currentPageTopRated < totalPagesTopRated && !loadingTopRated && !searchTerm && \r\n                \r\n                <LoadMoreButton text=\"Load More\" callback={loadMoreTopRatedShows} />\r\n                \r\n            }\r\n            {\r\n                loadingTopRated && <Spinner/>\r\n            }\r\n            <hr style={{height: '50px', border: 'none', backgroundColor: '#333'}} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowsPage;","import { useState, useEffect } from 'react';\r\nimport { API_URL, API_KEY } from '../config';\r\n\r\nexport const useTopRatedShowsFetch = searchTerm => {\r\n    const [state, setState] = useState({ topRatedShows: [] });\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n  \r\n    const fetchTopRatedShows = async endpoint => {\r\n      setError(false);\r\n      setLoading(true);\r\n  \r\n      const isLoadMore = endpoint.search('page');\r\n  \r\n      try {\r\n        const showsResult = await (await fetch(endpoint)).json();\r\n\r\n        setState(prev => ({\r\n          ...prev,\r\n          topRatedShows:\r\n            isLoadMore !== -1\r\n              ? [...prev.topRatedShows, ...showsResult.results]\r\n              : [...showsResult.results],\r\n          heroImageTopRated: prev.heroImageTopRated || showsResult.results[0],\r\n          currentPageTopRated: showsResult.page,\r\n          totalPagesTopRated: showsResult.total_pages,\r\n        }));\r\n\r\n      } catch (error) {\r\n        setError(true);\r\n        console.error(error);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fetchTopRatedShows(`${API_URL}tv/top_rated?api_key=${API_KEY}`)\r\n    }, []);\r\n\r\n    return [{ state, loading, error }, fetchTopRatedShows]\r\n}","import React from 'react';\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\n// Styled Components\r\nimport { StyledNavigation } from '../styles/StyledNavigation';\r\n\r\n// TODO: \r\n//  eclipse movie name capping it at 10 chars long\r\n//\r\n\r\nconst NavigationShow = ({ title, seasonNumber }) => {\r\n\r\n    const { showId } = useParams();\r\n    \r\n    let formattedShowName = '';\r\n    const showName = `${title}`;\r\n    const showNameLength = showName.length;\r\n    showNameLength > 14 ? formattedShowName = showName.substring(0, 14) + '...': formattedShowName = showName;    \r\n\r\n    if (!seasonNumber) return (\r\n        <StyledNavigation>\r\n            <div className=\"navigation-content\">\r\n                <Link to='/'>\r\n                    <p>Home</p>\r\n                </Link>\r\n\r\n                <p style={{opacity: '0.6'}}>|</p>\r\n\r\n                <Link to='/shows'>\r\n                    <p>Shows</p>\r\n                </Link>\r\n\r\n                <p style={{opacity: '0.6'}}>|</p>\r\n\r\n                <p style={{opacity: '0.6'}}>{formattedShowName}</p> \r\n\r\n            </div>\r\n        </StyledNavigation>\r\n    ) \r\n    \r\n    return (\r\n        <StyledNavigation>\r\n            <div className=\"navigation-content\">\r\n                <Link to='/'>\r\n                    <p>Home</p>\r\n                </Link>\r\n\r\n                <p style={{opacity: '0.6'}}>|</p>\r\n\r\n                <Link to='/shows'>\r\n                    <p>Shows</p>\r\n                </Link>\r\n\r\n                <p style={{opacity: '0.6'}}>|</p>\r\n\r\n                <Link to={`/shows/${showId}`}>\r\n                    <p>{formattedShowName}</p> \r\n                </Link>\r\n                \r\n                <p style={{opacity: '0.6'}}>|</p>\r\n                <p style={{opacity: '0.6'}}>Season {seasonNumber}</p> \r\n                       \r\n            </div>\r\n        </StyledNavigation>\r\n    )\r\n    \r\n}\r\n\r\nexport default NavigationShow;","import React from 'react';\r\n\r\nimport NoImage from '../../images/no_image.jpg';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\n\r\nimport ShowThumb from './ShowThumb';\r\n\r\nimport { StyledMovieInfo } from '../styles/StyledMovieInfo';\r\n\r\nconst ShowInfo = ({ show, season }) => {\r\n    \r\n    \r\n    if (!season) {\r\n        return (\r\n            <StyledMovieInfo backdrop={show.backdrop_path}>\r\n                <div className=\"movieinfo-content\">\r\n\r\n                    <div className=\"movieinfo-thumb\">\r\n                        <ShowThumb\r\n                            image={\r\n                                show.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${show.poster_path}`\r\n                                    : NoImage\r\n                            }\r\n                            clickable={false}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"movieinfo-text\">\r\n                        <h1>{show.name}</h1>\r\n                        <h3>Plot</h3>\r\n                        <p>{show.overview}</p>\r\n            \r\n\r\n                        <div className=\"rating-director\">\r\n                            <div>\r\n                                <h3>IMDB RATING</h3>\r\n                                <div className=\"score\">{show.vote_average}</div>\r\n                            </div>\r\n                        \r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n            </StyledMovieInfo>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <StyledMovieInfo backdrop={show.backdrop_path}>\r\n            <div className=\"movieinfo-content\">\r\n\r\n                <div className=\"movieinfo-thumb\">\r\n                    <ShowThumb\r\n                        image={\r\n                            show.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${show.poster_path}`\r\n                                : NoImage\r\n                        }\r\n                        clickable={false}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"movieinfo-text\">\r\n                    <h1>{season.name}</h1>\r\n                    <h3>Plot</h3>\r\n                    <p>{season.overview}</p>\r\n        \r\n\r\n                    <div className=\"rating-director\">\r\n                        <div>\r\n                            <h3>IMDB RATING</h3>\r\n                            <div className=\"score\">{show.vote_average}</div>\r\n                        </div>\r\n                    \r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </StyledMovieInfo>\r\n    )\r\n}\r\n\r\n\r\nexport default ShowInfo;","import React from 'react';\r\n\r\nimport Netflix from '../../images/netflix.png'\r\n\r\nimport { StyledMovieInfoBar } from '../styles/StyledMovieInfoBar';\r\n\r\nconst ShowInfoBar = ({ seasons, episodes, firstAirDate, homepage }) => {\r\n\r\n    let isOnNetflix = false;\r\n    isOnNetflix = `${homepage}`.includes('netflix');\r\n\r\n    return (\r\n        <StyledMovieInfoBar>      \r\n                {\r\n                    !isOnNetflix ? (\r\n                        <div className=\"movieinfobar-content\">\r\n                            <div className=\"movieinfobar-content-col\">\r\n                                <span className=\"movieinfobar-info\">\r\n                                    Seasons: {seasons}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"movieinfobar-content-col\">\r\n                                <span className=\"movieinfobar-info\">\r\n                                    Episodes: {episodes}\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div className=\"movieinfobar-content-col\">\r\n                                <span className=\"movieinfobar-info\">\r\n                                    First Air Date: {firstAirDate}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n    \r\n                        <div className=\"movieinfobar-netflix\">\r\n                            <span className=\"movieinfobar-info\">\r\n                                <a href={`${homepage}`} target=\"_blank\">\r\n                                    <img src={Netflix} alt=\"watch on netflix\" style={{width: '120px'}}/>\r\n                                </a>\r\n                            </span>\r\n                        </div>\r\n                        \r\n                    )\r\n                }\r\n        </StyledMovieInfoBar>\r\n    )\r\n}\r\n\r\n\r\nexport default ShowInfoBar;","import React from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nimport { StyledThumb } from \"../styles/StyledThumb\";\r\n\r\nconst ShowSeasonThumb = ({ image, seasonNumber, clickable }) => {\r\n  let { showId } = useParams();\r\n\r\n  return (\r\n    <StyledThumb>\r\n      {clickable ? (\r\n        <Link to={`/shows/${showId}/season/${seasonNumber}`}>\r\n          <img className=\"clickable\" src={image} alt=\"show-thumb\" />\r\n        </Link>\r\n      ) : (\r\n        <img src={image} alt=\"show-thumb\" />\r\n      )}\r\n    </StyledThumb>\r\n  );\r\n};\r\n\r\nexport default ShowSeasonThumb;\r\n","import { useEffect, useCallback, useState } from 'react';\r\nimport { API_URL, API_KEY } from '../config';\r\n\r\nexport const useShowFetch = (showId) => {\r\n    const [state, setState] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setError(false);\r\n        setLoading(true);\r\n\r\n        try {\r\n            const endpoint = `${API_URL}tv/${showId}?api_key=${API_KEY}`;\r\n            const showResults = await (await fetch(endpoint)).json();\r\n\r\n            const creditsEndpoint = `${API_URL}tv/${showId}/credits?api_key=${API_KEY}`;\r\n            const creditsResult = await (await fetch(creditsEndpoint)).json();\r\n            \r\n            setState({\r\n                ...showResults,\r\n                actors: creditsResult.cast\r\n            });\r\n            \r\n        } catch (error) {\r\n            setError(true);\r\n            console.error(error)\r\n        }\r\n\r\n        setLoading(false);\r\n    }, [showId])\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [fetchData]);\r\n\r\n    return [state, loading, error];\r\n}","import React from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// Components\r\nimport NavigationShow from '../components/elements/NavigationShow';\r\nimport ShowInfo from '../components/elements/ShowInfo'\r\nimport ShowInfoBar from '../components/elements/ShowInfoBar'\r\nimport ShowSeasonThumb from '../components/elements/ShowSeasonThumb'\r\nimport Actor from '../components/elements/Actor'\r\n\r\nimport Grid from '../components/elements/Grid';\r\nimport Spinner from '../components/elements/Spinner';\r\n\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\r\nimport NoImage from '../images/no_image.jpg';\r\n\r\n\r\n\r\n// Hooks\r\nimport { useShowFetch } from '../hooks/useShowFetch';\r\n\r\nconst ShowPage = () => {\r\n\r\n    let { showId } = useParams();\r\n    const [show, loading, error] = useShowFetch(showId);\r\n\r\n    console.log(show);\r\n\r\n    if (error) return <div>Something went wrong...</div>;\r\n    if (loading) return <Spinner/> ;\r\n\r\n    return (\r\n        <div style={{paddingTop: '60px'}}>\r\n            <NavigationShow title={show.name} />\r\n            <ShowInfo show={show} />\r\n            <ShowInfoBar \r\n                seasons={show.number_of_seasons}\r\n                episodes={show.number_of_episodes}\r\n                firstAirDate={show.first_air_date}\r\n            />\r\n            {/** SEASONS **/}\r\n            <Grid header=\"Seasons\">\r\n            {\r\n                show.seasons.map(season => (\r\n                    season.season_number !== 0 && \r\n                    <ShowSeasonThumb\r\n                        key={season.id}\r\n                        seasonId={season.id}\r\n                        seasonNumber={season.season_number}\r\n                        image={\r\n                            season.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${season.poster_path}`\r\n                                : NoImage\r\n                        }\r\n                        clickable\r\n                    />\r\n                ))\r\n            }\r\n            </Grid>\r\n            <hr style={{height: '50px', border: 'none', backgroundColor: '#333'}} />\r\n\r\n            {/** ACTORS **/}\r\n            <Grid header=\"Cast\">\r\n                {\r\n                    show.actors.map((actor, index) => (\r\n                        index < 10 &&\r\n                            <Actor key={actor.credit_id} actor={actor} clickable />\r\n                    ))\r\n                }\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowPage;","import React from 'react';\r\n\r\nimport { StyledActor } from '../styles/StyledActor';\r\n\r\nconst Episode = ({ image, episode }) =>  (\r\n    <StyledActor>\r\n        <img src={image} alt=\"episode-thumb\" />\r\n        <span className=\"actor-name\">{episode.name}</span>\r\n        <span className=\"actor-character\">Rated: {episode.vote_average} / 10</span>\r\n    </StyledActor>\r\n)\r\n\r\n\r\nexport default Episode;","import React from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// Components\r\nimport NavigationShow from '../components/elements/NavigationShow';\r\nimport ShowInfo from '../components/elements/ShowInfo'\r\nimport ShowInfoBar from '../components/elements/ShowInfoBar'\r\nimport Episode from '../components/elements/Episode'\r\nimport Actor from '../components/elements/Actor'\r\n\r\nimport Grid from '../components/elements/Grid';\r\nimport Spinner from '../components/elements/Spinner';\r\n\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\r\nimport NoImage from '../images/no_image.jpg';\r\n\r\n\r\n\r\n// Hooks\r\nimport { useShowFetch } from '../hooks/useShowFetch';\r\nimport { useShowSeasonFetch } from '../hooks/useShowSeasonFetch';\r\n\r\nconst ShowSeasonPage = () => {\r\n\r\n    let { showId, seasonNumber } = useParams();\r\n    const [show, loading, error] = useShowFetch(showId);\r\n    const [season, seasonLoading, seasonError] = useShowSeasonFetch(showId, seasonNumber);\r\n\r\n    console.log('season: ', season)\r\n\r\n    if (error || seasonError) return <div>Something went wrong...</div>;\r\n    if (loading || seasonLoading) return <Spinner/>;\r\n\r\n    return (\r\n        <div style={{paddingTop: '60px'}}>\r\n            <NavigationShow title={show.name} seasonNumber={seasonNumber} />\r\n            <ShowInfo show={show} season={season} />\r\n            <ShowInfoBar \r\n                seasons={show.number_of_seasons}\r\n                episodes={season.episodes.length}\r\n                firstAirDate={season.air_date}\r\n            />\r\n            {/** EPISODES **/}\r\n            <Grid header=\"Episodes\">\r\n            {\r\n                season.episodes.map(episode => (\r\n                    <Episode\r\n                        key={episode.id}\r\n                        episode={episode}\r\n                        image={\r\n                            episode.still_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${episode.still_path}`\r\n                                : NoImage\r\n                        }\r\n                    />\r\n                ))\r\n            }\r\n            </Grid>\r\n            <hr style={{height: '50px', border: 'none', backgroundColor: '#333'}} />\r\n            {/** ACTORS **/}\r\n            <Grid header=\"Cast\">\r\n                {\r\n                    show.actors.map((actor, index) => (\r\n                        index < 10 &&\r\n                            <Actor key={actor.credit_id} actor={actor} clickable />\r\n                    ))\r\n                }\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowSeasonPage;","import { useEffect, useCallback, useState } from 'react';\r\nimport { API_URL, API_KEY } from '../config';\r\n\r\nexport const useShowSeasonFetch = (showId, seasonNumber) => {\r\n    const [state, setState] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setError(false);\r\n        setLoading(true);\r\n\r\n        try {\r\n            const endpoint = `${API_URL}tv/${showId}/season/${seasonNumber}?api_key=${API_KEY}`;\r\n            const seasonResults = await (await fetch(endpoint)).json();\r\n            \r\n            setState({\r\n                ...seasonResults,\r\n                episodes: seasonResults.episodes\r\n            });\r\n            \r\n        } catch (error) {\r\n            setError(true);\r\n            console.error(error)\r\n        }\r\n\r\n        setLoading(false);\r\n    }, [showId])\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [fetchData]);\r\n\r\n    return [state, loading, error];\r\n}","import React from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../config';\r\nimport NoImage from '../images/no_image.jpg';\r\n\r\n// Components\r\nimport LoadMoreButton from '../components/elements/LoadMoreButton';\r\nimport HeroImage from '../components/elements/HeroImage';\r\nimport Grid from '../components/elements/Grid';\r\nimport Spinner from '../components/elements/Spinner';\r\n\r\n// Hooks\r\nimport { useMovieByGenreFetch } from '../hooks/useMovieByGenreFetch';\r\n\r\nimport MovieThumb from '../components/elements/MovieThumb';\r\n\r\nconst GenrePage = () => {\r\n\r\n    let { genreId, genreName } = useParams();\r\n    const [{ state: { movies, heroImage, currentPage, totalPages }, loading, error }, fetchMoviesByGenre ] = useMovieByGenreFetch(genreId);\r\n\r\n    if (!movies[0] || loading) return <Spinner/> ;\r\n    if (error) return <div>Something went wrong...</div>;\r\n\r\n    const loadMoreMovies = () => {\r\n\r\n        fetchMoviesByGenre(`${API_URL}discover/movie?api_key=${API_KEY}&with_genres=${genreId}&page=${currentPage + 1}`);\r\n    }\r\n\r\n    return (\r\n        <div style={{paddingTop: '60px'}}>\r\n            <HeroImage \r\n                image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\r\n                title={heroImage.original_title}\r\n                text={heroImage.overview}\r\n            />\r\n            <Grid header={`${genreName}`}>\r\n                {\r\n                    movies.map(movie => (\r\n                        <MovieThumb \r\n                            key={movie.id} \r\n                            clickable \r\n                            image={movie.poster_path \r\n                                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                                : NoImage} \r\n                            movieId={movie.id}\r\n                            movieName={movie.original_title}\r\n                        />\r\n                    ))\r\n                }\r\n            </Grid>\r\n            {\r\n                loading && <Spinner/>\r\n            }\r\n            { currentPage < totalPages && !loading && \r\n                <LoadMoreButton text=\"Load More\" callback={loadMoreMovies} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GenrePage;","import { useState, useEffect } from 'react';\r\nimport { API_URL, API_KEY } from '../config';\r\n\r\nexport const useMovieByGenreFetch = (genreId) => {\r\n    const [state, setState] = useState({ movies: [] });\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n\r\n    const fetchMoviesByGenre = async endpoint => {\r\n        setError(false);\r\n        setLoading(true);\r\n    \r\n        const isLoadMore = endpoint.search('page');\r\n    \r\n        try {\r\n          const movieResult = await (await fetch(endpoint)).json();\r\n          const randomIndex = Math.floor(Math.random() * 20)\r\n          setState(prev => ({\r\n            ...prev,\r\n            movies:\r\n              isLoadMore !== -1\r\n                ? [...prev.movies, ...movieResult.results]\r\n                : [...movieResult.results],\r\n            heroImage: prev.heroImage || movieResult.results[randomIndex],\r\n            currentPage: movieResult.page,\r\n            totalPages: movieResult.total_pages,\r\n          }));\r\n  \r\n        } catch (error) {\r\n          setError(true);\r\n          console.error(error);\r\n        }\r\n        setLoading(false);\r\n      };\r\n\r\n    useEffect(() => {\r\n        fetchMoviesByGenre(`${API_URL}discover/movie?api_key=${API_KEY}&with_genres=${genreId}`)\r\n    }, []);\r\n\r\n    return [{ state, loading, error }, fetchMoviesByGenre]\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\n// Styled Components\r\nimport { StyledNavigation } from '../styles/StyledNavigation';\r\n\r\n// TODO: \r\n//  eclipse movie name capping it at 10 chars long\r\n//\r\n\r\nconst Navigation = ({ title, movie, actor }) => {\r\n\r\n    let formattedMovieName = '';\r\n    if (!actor) {\r\n        const movieName = `${title}` ;\r\n        const movieNameLength = movieName.length;\r\n        movieNameLength > 14 ? formattedMovieName = movieName.substring(0, 14) + '...': formattedMovieName = movieName;    \r\n    } else {\r\n        formattedMovieName=title;\r\n    }\r\n    \r\n\r\n    return (\r\n        <StyledNavigation>\r\n            <div className=\"navigation-content\">\r\n                <Link to='/'>\r\n                    <p>Home</p>\r\n                </Link>\r\n                <p>|</p>\r\n                { actor && <><p>Actors</p><p>|</p></>}\r\n                <p style={{opacity: '0.6'}}>{formattedMovieName}</p>\r\n            </div>\r\n        </StyledNavigation>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import styled from 'styled-components';\r\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\r\n\r\nexport const StyledActorInfo = styled.div`\r\n  background: ${props =>\r\n    props.backdrop\r\n      ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.backdrop}')`\r\n      : '#000'};\r\n  background-size: cover !important;\r\n  background-position: center !important;\r\n  width: 100%;\r\n  padding: 40px 20px;\r\n  box-sizing: border-box;\r\n  animation: animateMovieinfo 1s;\r\n\r\n  .actorinfo-content {\r\n    max-width: 1280px;\r\n    min-height: 450px;\r\n    margin: 0 auto;\r\n    background: rgb(0, 0, 0, 0.7);\r\n    border-radius: 20px;\r\n    position: relative;\r\n  }\r\n\r\n  .actorinfo-thumb {\r\n    width: 300px;\r\n    float: left;\r\n\r\n    @media screen and (max-width: 768px) {\r\n      width: 100% !important;\r\n    }\r\n  }\r\n\r\n  .actorinfo-text {\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    padding: 40px;\r\n    color: #fff;\r\n    overflow: hidden;\r\n\r\n    h1 {\r\n      font-family: 'Abel', sans-serif;\r\n      font-size: 48px;\r\n      margin: 0;\r\n\r\n      @media screen and (max-width: 1000px) {\r\n        font-size: 32px !important;\r\n      }\r\n    }\r\n\r\n    h3 {\r\n      font-size: 16px;\r\n      line-height: 0;\r\n      margin-top: 30px;\r\n    }\r\n\r\n    p {\r\n      font-family: 'Abel', sans-serif;\r\n      font-size: 18px;\r\n      line-height: 26px;\r\n    }\r\n  }\r\n\r\n  .rating-director {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n  }\r\n\r\n  .score {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 35px;\r\n    height: 35px;\r\n    background: #fff;\r\n    color: #000;\r\n    font-weight: 800;\r\n    border-radius: 25px;\r\n    margin: 0px 0 0 0;\r\n  }\r\n\r\n  .director {\r\n    margin: 0 0 0 40px;\r\n\r\n    p {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    min-height: 600px;\r\n    height: auto;\r\n  }\r\n\r\n  @keyframes animateMovieinfo {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport NoImage from '../../images/no_image.jpg';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\n\r\nimport MovieThumb from './MovieThumb';\r\n\r\nimport { StyledActorInfo } from '../styles/StyledActorInfo';\r\n\r\nconst ActorInfo = ({ actor }) => (\r\n    <StyledActorInfo>\r\n        <div className=\"actorinfo-content\">\r\n            <div className=\"actorinfo-thumb\">\r\n                <MovieThumb\r\n                    image={\r\n                        actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n                            : NoImage\r\n                    }\r\n                    clickable={false}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"actorinfo-text\">\r\n                <h1>{actor.name}</h1>\r\n                <h3>Biography</h3>\r\n                <p>{actor.biography}</p>\r\n\r\n            </div>\r\n        </div>\r\n    </StyledActorInfo>\r\n)\r\n\r\n\r\nexport default ActorInfo;","import styled from 'styled-components';\r\n\r\nexport const StyledRole = styled.div`\r\n  font-family: 'Abel', sans-serif;\r\n  color: #fff;\r\n  background: #1c1c1c;\r\n  border-radius: 20px;\r\n  padding: 5px;\r\n  text-align: center;\r\n\r\n  img {\r\n    display: block;\r\n    width: 100%;\r\n    height: 200px;\r\n    object-fit: cover;\r\n    border-radius: 15px;\r\n  }\r\n\r\n  .role-name {\r\n    display: block;\r\n    font-size: 18px;\r\n    margin: 10px 0 0 0;\r\n  }\r\n\r\n  .role-character {\r\n    display: block;\r\n    font-size: 16px;\r\n    margin: 0 0 10px 0;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport NoImage from '../../images/no_image.jpg';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\n\r\nimport { StyledRole } from '../styles/StyledRole';\r\n\r\nconst Role = ({ title, character, role, clickable }) =>  {\r\n    return (\r\n        <StyledRole>\r\n            {clickable ? (\r\n                <Link to={`/movies/${role.id}`}>\r\n                    <img \r\n                    src={role.poster_path\r\n                        ? `${IMAGE_BASE_URL}${POSTER_SIZE}${role.poster_path}` \r\n                        : NoImage } alt=\"movie-thumb\" \r\n                    />\r\n                </Link>\r\n            ) : (\r\n                <img \r\n                src={role.poster_path\r\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${role.poster_path}` \r\n                    : NoImage } alt=\"movie-thumb\" \r\n                />\r\n            )}\r\n            <span className=\"role-name\">{title}</span>\r\n            <span className=\"role-character\">{character}</span>\r\n        </StyledRole>\r\n    )\r\n}\r\n\r\n\r\nexport default Role;","import React from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// Components\r\nimport Navigation from '../components/elements/Navigation';\r\nimport ActorInfo from '../components/elements/ActorInfo'\r\nimport Role from '../components/elements/Role'\r\n\r\nimport Grid from '../components/elements/Grid';\r\nimport Spinner from '../components/elements/Spinner';\r\n\r\n// Hooks\r\nimport { useActorFetch } from '../hooks/useActorFetch';\r\n\r\nconst ActorPage = () => {\r\n\r\n    let { actorId } = useParams();\r\n    const [actor, loading, error] = useActorFetch(actorId);\r\n    \r\n    if (error) return <div>Something went wrong...</div>;\r\n    if (loading) return <Spinner/> ;\r\n\r\n    return (\r\n        <div style={{paddingTop: '60px'}}>\r\n            <Navigation actor title={actor.name} />\r\n            <ActorInfo actor={actor} />\r\n            <Grid header=\"Known For\">\r\n                {\r\n                    actor.roles.map((role, index) => (\r\n                        index < 10 &&\r\n                            <Role key={role.credit_id} title={role.title} character={role.character} role={role} clickable />\r\n                    ))\r\n                }\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActorPage;","import { useEffect, useCallback, useState } from 'react';\r\nimport { API_URL, API_KEY } from '../config';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const useActorFetch = (actorId) => {\r\n    const history = useHistory();\r\n\r\n    const [state, setState] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setError(false);\r\n        setLoading(true);\r\n\r\n        try {\r\n            const endpoint = `${API_URL}person/${actorId}?api_key=${API_KEY}`;\r\n            const response = await fetch(endpoint);\r\n            if (response.status === 404) {\r\n                history.goBack();\r\n            }\r\n            const result = await response.json();\r\n            const knownforEndpoint = `${API_URL}person/${actorId}/movie_credits?api_key=${API_KEY}`;\r\n            const knownForResults = await (await fetch(knownforEndpoint)).json();\r\n            \r\n            setState({\r\n                ...result,\r\n                roles: knownForResults.cast\r\n            });\r\n            \r\n        } catch (error) {\r\n            setError(true);\r\n            console.error(error)\r\n        }\r\n\r\n        setLoading(false);\r\n    }, [actorId])\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [fetchData]);\r\n\r\n    return [state, loading, error];\r\n}","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFoundPage = () => {\r\n    \r\n  return (\r\n    <div style={{ position: 'absolute', top: '30%'}}>\r\n      <p style={{ textAlign: \"center\" }}>\r\n        <Link to=\"/\">Go to Home </Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`;\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\n// Components\r\nimport Header from './components/elements/Header';\r\nimport HomePage from './pages/HomePage';\r\n\r\nimport MoviePage from './pages/MoviePage';\r\nimport MoviesPage from './pages/MoviesPage';\r\n\r\nimport ShowsPage from './pages/ShowsPage';\r\nimport ShowPage from './pages/ShowPage';\r\nimport ShowSeasonPage from './pages/ShowSeasonPage';\r\n\r\nimport GenrePage from './pages/GenrePage';\r\n\r\nimport ActorPage from './pages/ActorPage';\r\n\r\nimport NotFoundPage from './pages/NotFoundPage';\r\n\r\nimport { GlobalStyle } from './components/styles/GlobalStyle';\r\n\r\nconst App = () => (\r\n    <Router>\r\n        <Header />\r\n        <Switch>\r\n            <Route exact path='/' component={HomePage} />\r\n            <Route exact path='/movies/:movieId' component={MoviePage} />\r\n            <Route exact path='/movies' component={MoviesPage} />\r\n\r\n            <Route exact path='/genre/:genreName/:genreId' component={GenrePage} />\r\n\r\n            <Route exact path='/shows' component={ShowsPage} />\r\n            <Route exact path='/shows/:showId' component={ShowPage} />\r\n            <Route exact path='/shows/:showId/season/:seasonNumber' component={ShowSeasonPage} />\r\n\r\n            <Route exact path='/actors/:actorId' component={ActorPage} />\r\n\r\n            <Route path=\"/404\" component={NotFoundPage} />\r\n            <Redirect to=\"/404\" />\r\n \r\n        </Switch>\r\n        <GlobalStyle />\r\n    </Router>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}