{"version":3,"sources":["images/netflix.png","images/no_image.jpg","components/elements/Header.js","config.js","components/styles/StyledHeroImage.js","components/elements/HeroImage.js","components/styles/StyledGrid.js","components/elements/Grid.js","components/styles/StyledThumb.js","components/elements/MovieThumb.js","components/styles/StyledLoadMoreBtn.js","components/elements/LoadMoreButton.js","components/styles/StyledSpinner.js","components/elements/Spinner.js","hooks/usePopularMoviesFetch.js","hooks/usePopularShowsFetch.js","components/elements/ShowThumb.js","pages/HomePage.js","components/styles/StyledNavigation.js","components/elements/NavigationMovie.js","components/styles/StyledMovieInfo.js","components/elements/MovieInfo.js","helpers.js","components/styles/StyledMovieInfoBar.js","components/elements/MovieInfoBar.js","components/styles/StyledActor.js","components/elements/Actor.js","components/elements/CrewMember.js","pages/MoviePage.js","hooks/useMovieFetch.js","hooks/useSimilarMoviesFetch.js","components/styles/StyledSearchBar.js","components/elements/SearchBar.js","pages/MoviesPage.js","hooks/useTopRatedMoviesFetch.js","pages/ShowsPage.js","hooks/useTopRatedShowsFetch.js","components/elements/NavigationShow.js","components/elements/ShowInfo.js","components/elements/ShowInfoBar.js","components/elements/ShowSeasonThumb.js","hooks/useShowFetch.js","pages/ShowPage.js","components/elements/Episode.js","pages/ShowSeasonPage.js","hooks/useShowSeasonFetch.js","pages/GenrePage.js","hooks/useMovieByGenreFetch.js","components/elements/Navigation.js","components/styles/StyledActorInfo.js","components/elements/ActorInfo.js","components/elements/ActorInfoBar.js","components/styles/StyledRole.js","components/elements/Role.js","pages/ActorPage.js","hooks/useActorFetch.js","components/styles/NotFoundStyle.js","pages/NotFoundPage.js","components/styles/GlobalStyle.js","App.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","HideOnScroll","props","children","window","trigger","useScrollTrigger","target","undefined","Slide","appear","direction","in","Header","classes","React","useState","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","Boolean","history","useHistory","renderMobileMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","IconButton","aria-label","onClick","push","className","CssBaseline","AppBar","Toolbar","edge","Typography","variant","noWrap","aria-controls","aria-haspopup","event","currentTarget","API_URL","API_KEY","IMAGE_BASE_URL","SEARCH_BASE_URL","POPULAR_BASE_URL_MOVIES","TOP_RATED_BASE_URL_MOVIES","SEARCH_BASE_URL_SHOWS","TOP_RATED_BASE_URL_SHOWS","POPULAR_BASE_URL_SHOWS","StyledHeroImage","styled","div","image","HeroImage","text","StyledGrid","StyledGridContent","Grid","header","StyledThumb","MovieThumb","movieId","clickable","to","src","alt","StyledLoadMoreBtn","button","LoadMoreButton","callback","type","StyledSpinner","Spinner","usePopularMoviesFetch","searchTerm","movies","state","setState","loading","setLoading","error","setError","fetchPopularMovies","endpoint","a","isLoadMore","fetch","json","movieResult","randomIndex","Math","floor","random","prev","results","heroImage","currentPage","page","totalPages","total_pages","console","useEffect","usePopularShowsFetch","shows","fetchPopularShows","showResult","heroImageShow","currentPageShow","totalPagesShow","ShowThumb","showId","HomePage","loadingShow","errorShow","round","heroImageURL","backdrop_path","heroImageTitle","original_title","original_name","heroImageText","overview","style","paddingTop","map","movie","key","poster_path","NoImage","movieName","popularEndpoint","border","show","showName","StyledNavigation","NavigationMovie","formattedMovieName","length","substring","opacity","StyledMovieInfo","backdrop","MovieInfo","vote_average","directors","director","credit_id","name","genres","genre","Chip","label","margin","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","StyledMovieInfoBar","MovieInfoBar","isOnNetflix","time","budget","revenue","homepage","includes","href","rel","Netflix","size","hours","mins","calcTime","StyledActor","Actor","actor","profile_path","character","CrewMember","member","job","MoviePage","useParams","fetchData","useCallback","response","status","goBack","moviesResult","creditsEndpoint","creditsResult","crew","filter","actors","cast","useMovieFetch","movie_id","simliarMovies","fetchSimilarMovies","currentPageSimilar","totalPagesSimilar","useSimilarMoviesFetch","loadingSimilar","errorSimilar","runtime","index","toString","StyledSearchBar","StyledSearchBarContent","SearchBar","timeOut","useRef","placeholder","onChange","value","clearTimeout","current","setTimeout","MoviesPage","topRatedMovies","fetchTopRatedMovies","heroImageTopRated","currentPageTopRated","totalPagesTopRated","useTopRatedMoviesFetch","loadingTopRated","errorTopRated","setSearchTerm","searchEndpoint","ShowsPage","topRatedShows","fetchTopRatedShows","showsResult","useTopRatedShowsFetch","NavigationShow","seasonNumber","formattedShowName","ShowInfo","season","ShowInfoBar","seasons","episodes","firstAirDate","ShowSeasonThumb","useShowFetch","showResults","ShowPage","number_of_seasons","number_of_episodes","first_air_date","season_number","seasonId","Episode","episode","ShowSeasonPage","seasonResults","useShowSeasonFetch","seasonLoading","seasonError","air_date","still_path","GenrePage","genreId","genreName","fetchMoviesByGenre","useMovieByGenreFetch","Navigation","StyledActorInfo","ActorInfo","biography","popularity","ActorInfoBar","birthday","knownFor","placeOfBirth","StyledRole","Role","role","ActorPage","actorId","result","knownforEndpoint","knownForResults","roles","useActorFetch","known_for_department","place_of_birth","StyledNotFound","NotFoundPage","xmlns","viewBox","d","cx","cy","r","gradientUnits","offset","stopColor","stopOpacity","attributeName","values","dur","repeatCount","fill","GlobalStyle","createGlobalStyle","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f905fdae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/netflix.d9247b29.png\";","module.exports = __webpack_public_path__ + \"static/media/no_image.31f5bb1d.jpg\";","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Home from '@material-ui/icons/Home';\r\nimport Theaters from '@material-ui/icons/Theaters';\r\nimport Tv from '@material-ui/icons/Tv';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nfunction HideOnScroll(props) {\r\n    const { children, window } = props;\r\n    // Note that you normally won't need to set the window ref as useScrollTrigger\r\n    // will default to window.\r\n    // This is only being set here because the demo is in an iframe.\r\n    const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n  \r\n    return (\r\n      <Slide appear={false} direction=\"down\" in={!trigger}>\r\n        {children}\r\n      </Slide>\r\n    );\r\n  }\r\n  \r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\" onClick={() => history.push('/React-IMDB/movies')}>\r\n            <Theaters />\r\n        </IconButton>\r\n        <p>Movies</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\" onClick={() => history.push('/React-IMDB/shows')}>\r\n            <Tv />\r\n        </IconButton>\r\n        <p>Shows</p>\r\n      </MenuItem>\r\n\r\n    </Menu>\r\n  );\r\n\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <CssBaseline />\r\n      <HideOnScroll>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={() => history.push('/React-IMDB')}\r\n          >\r\n            <Home  />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            E-TV\r\n          </Typography>\r\n         \r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label=\"Movies\" color=\"inherit\"  onClick={() => history.push('/React-IMDB/movies')}>\r\n                <Theaters/>\r\n            </IconButton>\r\n            <IconButton aria-label=\"Shows\" color=\"inherit\" onClick={() => history.push('/React-IMDB/shows')}>\r\n                <Tv />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      </HideOnScroll>\r\n      {renderMobileMenu}\r\n    </div>\r\n  );\r\n}","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c9f3c719e4cce4a021ff37d2e89d43ba';\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&query=`;\nconst POPULAR_BASE_URL_MOVIES = `${API_URL}movie/popular?api_key=${API_KEY}`;\nconst TOP_RATED_BASE_URL_MOVIES = `${API_URL}movie/top_rated?api_key=${API_KEY}`;\n\nconst SEARCH_BASE_URL_SHOWS = `${API_URL}search/tv?api_key=${API_KEY}&query=`;\nconst TOP_RATED_BASE_URL_SHOWS = `${API_URL}tv/top_rated?api_key=${API_KEY}`;\nconst POPULAR_BASE_URL_SHOWS = `${API_URL}tv/popular?api_key=${API_KEY}`;\n\n\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE, SEARCH_BASE_URL, SEARCH_BASE_URL_SHOWS, TOP_RATED_BASE_URL_SHOWS, POPULAR_BASE_URL_MOVIES, TOP_RATED_BASE_URL_MOVIES, POPULAR_BASE_URL_SHOWS };\n","import styled from 'styled-components';\n\nexport const StyledHeroImage = styled.div`\n  background: ${props =>\n    `linear-gradient(\n      to bottom, rgba(0,0,0,0)\n      39%,rgba(0,0,0,0)\n      41%,rgba(0,0,0,0.65)\n      100%\n    ),\n    url('${props.image}'), #1c1c1c`};\n  background-size: 100%, cover !important;\n  background-position: center, center !important;\n  width: 100%;\n  height: 600px;\n  position: relative;\n  animation: animateHeroimage 1s;\n\n  .heroimage-content {\n    max-width: 1280px;\n    padding: 20px;\n    margin: 0 auto;\n  }\n\n  .heroimage-text {\n    z-index: 100;\n    max-width: 700px;\n    position: absolute;\n    bottom: 40px;\n    margin-right: 20px;\n    min-height: 100px;\n    background: rgba(0, 0, 0, 0);\n    color: #fff;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 38px;\n        color: #fff;\n      }\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      line-height: 26px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 16px;\n        line-height: 20px;\n        color: #fff;\n      }\n    }\n\n    @media screen and (max-width: 720px) {\n      max-width: 100%;\n    }\n  }\n\n  @keyframes animateHeroimage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react';\r\n\r\nimport { StyledHeroImage } from '../styles/StyledHeroImage';\r\n\r\nconst HeroImage = ({ image, title, text }) => {\r\n    return (\r\n        <StyledHeroImage image={image}>\r\n            <div className=\"heroimage-content\">\r\n                <div className=\"heroimage-text\">\r\n                    <h1>{title}</h1>\r\n                    <p>{text}</p>\r\n                </div>\r\n            </div>\r\n        </StyledHeroImage>\r\n    )\r\n}\r\n\r\nexport default HeroImage;\r\n","import styled from 'styled-components';\n\nexport const StyledGrid = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n\n  h1 {\n    font-family: 'Abel', sans-serif;\n    font-size: 42px;\n\n    @media screen and (max-width: 768px) {\n      font-size: 22px;\n    }\n  }\n`;\n\nexport const StyledGridContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(100px, 1fr));\n  grid-gap: 40px;\n  position: relative;\n\n  .grid-element {\n    animation: animateGrid 0.5s;\n  }\n\n  @keyframes animateGrid {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: repeat(4, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 600px) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 375px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\n","import React from 'react';\r\n\r\nimport { StyledGrid, StyledGridContent } from '../styles/StyledGrid';\r\n\r\nconst Grid = ({ header, children }) => (\r\n    <StyledGrid>\r\n        <h1>{header}</h1>\r\n        <StyledGridContent>{children}</StyledGridContent>\r\n    </StyledGrid>\r\n)\r\n\r\n\r\nexport default Grid;","import styled from 'styled-components';\n\nexport const StyledThumb = styled.div`\n  img {\n    width: 100%;\n    height: auto;\n    /* max-height: 350px; */\n    transition: all 0.3s;\n    object-fit: cover;\n    border-radius: 20px;\n\n    :hover {\n      opacity: 0.8;\n    }\n\n    /* @media screen and (max-width: 1024px) {\n      height: 300px;\n    }\n\n    @media screen and (max-width: 768px) {\n      height: 350px;\n    }\n\n    @media screen and (max-width: 600px) {\n      max-height: 300px;\n    }\n\n    @media screen and (max-width: 375px) {\n      max-height: 450px;\n    } */\n\n    .clickable {\n      cursor: pointer;\n    }\n  }\n`;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { StyledThumb } from '../styles/StyledThumb';\r\n\r\nconst MovieThumb = ({ image, movieId, clickable }) => (\r\n  <StyledThumb>\r\n    {clickable ? (\r\n      <Link to={`/React-IMDB/movies/${movieId}`}>\r\n        <img className=\"clickable\" src={image} alt=\"moviethumb\" />\r\n      </Link>\r\n    ) : (\r\n      <img src={image} alt=\"moviethumb\" />\r\n    )}\r\n  </StyledThumb>\r\n)\r\n\r\nexport default MovieThumb;\r\n","import styled from 'styled-components';\n\nexport const StyledLoadMoreBtn = styled.button`\n  background: #000;\n  width: 25%;\n  min-width: 200px;\n  height: 70px;\n  color: #fff;\n  cursor: pointer;\n  transition: all 0.3s;\n  border-radius: 40px;\n  font-family: 'Abel', sans-serif;\n  font-size: 28px;\n  max-width: 1280px;\n  display: block;\n  margin: 20px auto;\n  padding: 0 20px;\n  outline: none;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","import React from 'react';\r\n\r\nimport { StyledLoadMoreBtn } from '../styles/StyledLoadMoreBtn';\r\n\r\nconst LoadMoreButton = ({ text, callback}) => (\r\n    <StyledLoadMoreBtn type=\"button\" onClick={callback}>\r\n        {text}\r\n    </StyledLoadMoreBtn>\r\n)\r\n\r\n\r\nexport default LoadMoreButton;","import styled from 'styled-components';\n\nexport const StyledSpinner = styled.div`\n  border: 5px solid #f3f3f3; /* Light grey */\n  border-top: 5px solid #16d47b; /* Blue */\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react';\r\n\r\nimport { StyledSpinner } from '../styles/StyledSpinner';\r\n\r\nconst Spinner = () => ( <StyledSpinner /> )\r\n\r\nexport default Spinner;","import { useState, useEffect } from 'react';\r\nimport { API_URL, API_KEY } from '../config';\r\n\r\nexport const usePopularMoviesFetch = searchTerm => {\r\n    const [state, setState] = useState({ movies: [] });\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n  \r\n    const fetchPopularMovies = async endpoint => {\r\n      setError(false);\r\n      setLoading(true);\r\n  \r\n      const isLoadMore = endpoint.search('page');\r\n  \r\n      try {\r\n        const movieResult = await (await fetch(endpoint)).json();\r\n        const randomIndex = Math.floor(Math.random() * 20)\r\n\r\n        setState(prev => ({\r\n          ...prev,\r\n          movies:\r\n            isLoadMore !== -1\r\n              ? [...prev.movies, ...movieResult.results]\r\n              : [...movieResult.results],\r\n          heroImage: prev.heroImage || movieResult.results[randomIndex],\r\n          currentPage: movieResult.page,\r\n          totalPages: movieResult.total_pages,\r\n        }));\r\n\r\n      } catch (error) {\r\n        setError(true);\r\n        console.error(error);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchPopularMovies(`${API_URL}movie/popular?api_key=${API_KEY}`)\r\n    }, []);\r\n\r\n    return [{ state, loading, error }, fetchPopularMovies]\r\n}","import { useState, useEffect } from 'react';\r\nimport { API_URL, API_KEY } from '../config';\r\n\r\nexport const usePopularShowsFetch = searchTerm => {\r\n    const [state, setState] = useState({ shows: [] });\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n  \r\n    const fetchPopularShows = async endpoint => {\r\n      setError(false);\r\n      setLoading(true);\r\n  \r\n      const isLoadMore = endpoint.search('page');\r\n  \r\n      try {\r\n        const showResult = await (await fetch(endpoint)).json();\r\n        const randomIndex = Math.floor(Math.random() * 20)\r\n        setState(prev => ({\r\n          ...prev,\r\n          shows:\r\n            isLoadMore !== -1\r\n              ? [...prev.shows, ...showResult.results]\r\n              : [...showResult.results],\r\n          heroImageShow: prev.heroImageShow || showResult.results[randomIndex],\r\n          currentPageShow: showResult.page,\r\n          totalPagesShow: showResult.total_pages,\r\n        }));\r\n\r\n      } catch (error) {\r\n        setError(true);\r\n        console.error(error);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchPopularShows(`${API_URL}tv/popular?api_key=${API_KEY}`)\r\n    }, []);\r\n\r\n    return [{ state, loading, error }, fetchPopularShows]\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { StyledThumb } from '../styles/StyledThumb';\r\n\r\nconst ShowThumb = ({ image, showId, clickable }) => (\r\n  <StyledThumb>\r\n    {clickable ? (\r\n      <Link to={`/React-IMDB/shows/${showId}`}>\r\n        <img className=\"clickable\" src={image} alt=\"show-thumb\" />\r\n      </Link>\r\n    ) : (\r\n      <img src={image} alt=\"show-thumb\" />\r\n    )}\r\n  </StyledThumb>\r\n)\r\n\r\nexport default ShowThumb;\r\n","import React from 'react';\r\n\r\n// API CONSTANTS\r\nimport { IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE, POPULAR_BASE_URL_MOVIES, POPULAR_BASE_URL_SHOWS } from '../config';\r\n\r\n// Components\r\nimport HeroImage from '../components/elements/HeroImage';\r\nimport Grid from '../components/elements/Grid';\r\nimport MovieThumb from '../components/elements/MovieThumb';\r\nimport LoadMoreButton from '../components/elements/LoadMoreButton';\r\nimport Spinner from '../components/elements/Spinner';\r\n\r\n// Hooks\r\nimport { usePopularMoviesFetch } from '../hooks/usePopularMoviesFetch';\r\nimport { usePopularShowsFetch } from '../hooks/usePopularShowsFetch';\r\n\r\nimport NoImage from '../images/no_image.jpg';\r\nimport ShowThumb from '../components/elements/ShowThumb';\r\n\r\nconst HomePage = () => {\r\n   \r\n    const [{ state: { movies, heroImage, currentPage, totalPages }, loading, error }, fetchPopularMovies ] = usePopularMoviesFetch();\r\n    const [{ state: { shows, heroImageShow, currentPageShow, totalPagesShow }, loadingShow, errorShow }, fetchPopularShows ] = usePopularShowsFetch();\r\n\r\n    const randomIndex = Math.round(Math.random())\r\n   \r\n    if (!movies[0] || !shows[0])  return <Spinner /> \r\n\r\n    if (error || errorShow) return <div>Something went wrong...</div>\r\n    \r\n    const loadMoreMovies = () => {\r\n        const popularEndpoint = `${POPULAR_BASE_URL_MOVIES}&page=${currentPage + 1}`;\r\n        fetchPopularMovies(popularEndpoint);\r\n    }\r\n\r\n    const loadMoreShows = () => {\r\n        const endpoint = `${POPULAR_BASE_URL_SHOWS}&page=${currentPage + 1}`;\r\n        fetchPopularShows(endpoint);\r\n    }\r\n\r\n    const heroImageURL = randomIndex === 0 ? `${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}` : `${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImageShow.backdrop_path}`;\r\n    const heroImageTitle = randomIndex === 0 ? heroImage.original_title: heroImageShow.original_name;\r\n    const heroImageText = randomIndex === 0 ? heroImage.overview : heroImageShow.overview;\r\n\r\n    return (\r\n        <div style={{paddingTop: '60px'}}>\r\n            \r\n            <HeroImage \r\n                image={heroImageURL}\r\n                title={heroImageTitle}\r\n                text={heroImageText}\r\n            />\r\n              \r\n           \r\n            <Grid header='Popular Movies'>\r\n                {\r\n                    movies.map(movie => (\r\n                        <MovieThumb \r\n                            key={movie.id} \r\n                            clickable \r\n                            image={movie.poster_path \r\n                                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                                : NoImage} \r\n                            movieId={movie.id}\r\n                            movieName={movie.original_title}\r\n                        />\r\n                    ))\r\n                }\r\n            </Grid>\r\n            {\r\n                loading && <Spinner/>\r\n            }\r\n            { currentPage < totalPages && !loading && (\r\n                <LoadMoreButton text=\"Load More\" callback={loadMoreMovies} />\r\n            )}\r\n            <hr style={{height: '50px', border: 'none', backgroundColor: '#333'}} />\r\n\r\n            {/** SHOWS  **/}\r\n            <Grid header='Popular Shows'>\r\n                {\r\n                    shows.map(show => (\r\n                        <ShowThumb \r\n                            key={show.id} \r\n                            clickable \r\n                            image={show.poster_path \r\n                                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${show.poster_path}`\r\n                                : NoImage} \r\n                            showId={show.id}\r\n                            showName={show.original_title}\r\n                        />\r\n                    ))\r\n                }\r\n            </Grid>\r\n            {\r\n                loadingShow && <Spinner/>\r\n            }\r\n            { currentPageShow < totalPagesShow && !loadingShow && (\r\n                <LoadMoreButton text=\"Load More\" callback={loadMoreShows} />\r\n            )}\r\n            <hr style={{height: '50px', border: 'none', backgroundColor: '#333'}} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import styled from 'styled-components';\n\nexport const StyledNavigation = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 70px;\n  background: #353535;\n  color: #fff;\n\n  .navigation-content {\n    max-width: 1280px;\n    margin: 0 auto;\n    padding: 0 20px;\n    width: 100%;\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      float: left;\n      color: #fff;\n      padding-right: 10px;\n      text-decoration: none;\n\n      @media screen and (max-width: 768px) {\n        font-size: 16px;\n      }\n    }\n  }\n`;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\n// Styled Components\r\nimport { StyledNavigation } from '../styles/StyledNavigation';\r\n\r\n// TODO: \r\n//  eclipse movie name capping it at 10 chars long\r\n//\r\n\r\nconst NavigationMovie = ({ title }) => {\r\n\r\n    \r\n    let formattedMovieName = '';\r\n    const movieName = `${title}`;\r\n    const movieNameLength = movieName.length;\r\n    movieNameLength > 14 ? formattedMovieName = movieName.substring(0, 14) + '...': formattedMovieName = movieName;    \r\n\r\n    return (\r\n        <StyledNavigation>\r\n            <div className=\"navigation-content\">\r\n                <Link to='/React-IMDB'>\r\n                    <p>Home</p>\r\n                </Link>\r\n\r\n                <p style={{opacity: '0.6'}}>|</p>\r\n\r\n                <Link to='/React-IMDB/movies'>\r\n                    <p>Movies</p>\r\n                </Link>\r\n                \r\n                <p style={{opacity: '0.6'}}>|</p>\r\n                \r\n                <p style={{opacity: '0.6'}}>{formattedMovieName}</p>\r\n            </div>\r\n        </StyledNavigation>\r\n    )\r\n}\r\n\r\nexport default NavigationMovie;","import styled from 'styled-components';\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\n\nexport const StyledMovieInfo = styled.div`\n  background: ${props =>\n    props.backdrop\n      ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.backdrop}')`\n      : '#000'};\n  background-size: cover !important;\n  background-position: center !important;\n  width: 100%;\n  padding: 40px 20px;\n  box-sizing: border-box;\n  animation: animateMovieinfo 1s;\n\n  .movieinfo-content {\n    max-width: 1280px;\n    min-height: 450px;\n    margin: 0 auto;\n    background: rgb(0, 0, 0, 0.7);\n    border-radius: 20px;\n    position: relative;\n  }\n\n  .movieinfo-thumb {\n    width: 300px;\n    float: left;\n\n    @media screen and (max-width: 768px) {\n      width: 100% !important;\n    }\n  }\n\n  .movieinfo-text {\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 40px;\n    color: #fff;\n    overflow: hidden;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      margin: 0;\n\n      @media screen and (max-width: 1000px) {\n        font-size: 32px !important;\n      }\n    }\n\n    h3 {\n      font-size: 16px;\n      line-height: 0;\n      margin-top: 30px;\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 18px;\n      line-height: 26px;\n    }\n  }\n\n  .rating-director {\n    display: flex;\n    justify-content: flex-start;\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 25px;\n    margin: 0px 0 0 0;\n  }\n\n  .director {\n    margin: 0 40px 0 40px;\n\n    p {\n      margin: 0;\n    }\n  }\n\n  .genre {\n    margin: 0 40px 0 40px;\n\n    p {\n      margin: 0;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    min-height: 600px;\n    height: auto;\n  }\n\n  @keyframes animateMovieinfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Chip } from \"@material-ui/core\";\r\nimport NoImage from \"../../images/no_image.jpg\";\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\";\r\n\r\nimport MovieThumb from \"./MovieThumb\";\r\n\r\nimport { StyledMovieInfo } from \"../styles/StyledMovieInfo\";\r\n\r\nconst MovieInfo = ({ movie }) => {\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <StyledMovieInfo backdrop={movie.backdrop_path}>\r\n      <div className=\"movieinfo-content\">\r\n        <div className=\"movieinfo-thumb\">\r\n          <MovieThumb\r\n            image={\r\n              movie.poster_path\r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                : NoImage\r\n            }\r\n            clickable={false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"movieinfo-text\">\r\n          <h1>{movie.title}</h1>\r\n          <h3>Plot</h3>\r\n          <p>{movie.overview}</p>\r\n\r\n          <div className=\"rating-director\">\r\n            <div>\r\n              <h3>RATING</h3>\r\n              <div className=\"score\">{movie.vote_average}</div>\r\n            </div>\r\n\r\n            <div className=\"director\">\r\n              <h3>DIRECTOR{movie.directors.length > 1 ? \"S\" : \"\"}</h3>\r\n              {\r\n                movie.directors.map((director) => (\r\n                  <p\r\n                    key={director.credit_id}\r\n                    onClick={() => history.push(`/React-IMDB/people/${director.id}`)}\r\n                  >\r\n                    {director.name}\r\n                  </p>\r\n                ))\r\n              }\r\n            </div>\r\n\r\n            <div className=\"genres\">\r\n              <h3>GENRE{movie.genres.length > 1 ? \"S\" : \"\"}</h3>\r\n              {movie.genres.map((genre) => (\r\n                <Chip\r\n                  color=\"default\"\r\n                  key={genre.id}\r\n                  label={genre.name}\r\n                  clickable\r\n                  style={{ margin: \"5px\" }}\r\n                  onClick={() => history.push(`/React-IMDB/genre/${genre.name}/${genre.id}`)}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </StyledMovieInfo>\r\n  );\r\n};\r\n\r\nexport default MovieInfo;\r\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n","import styled from 'styled-components';\n\nexport const StyledMovieInfoBar = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: 100px;\n  height: auto;\n  background: #1c1c1c;\n  padding: 20px;\n  box-sizing: border-box;\n  font-family: 'Abel', sans-serif;\n  font-size: 20px;\n\n  .movieinfobar-content {\n    max-width: 1280px;\n    width: 100%;\n    margin: 0 auto;\n    color: #fff;\n  }\n\n  .movieinfobar-content-col {\n    float: left;\n    width: 33.33%;\n    box-sizing: border-box;\n    padding: 10px 20px 0 0;\n  }\n\n  .movieinfobar-netflix {\n    justify-content: center;\n    display: flex;\n    width: 100%;\n    box-sizing: border-box;\n  }\n\n  .movieinfobar-info {\n    padding: 5px 0 0 10px;\n    float: left;\n  }\n\n  .fa-time,\n  .fa-revenue {\n    float: left;\n    margin-top: -4px;\n  }\n\n  .fa-budget {\n    float: left;\n    margin-top: -3px;\n  }\n\n  @media screen and (max-width: 768px) {\n    .fa-time,\n    .fa-revenue,\n    .fa-budget {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 425px) {\n    font-size: 14px;\n  }\n`;\n","import React from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\n\r\nimport Netflix from '../../images/netflix.png'\r\n\r\nimport { calcTime, convertMoney } from '../../helpers';\r\n\r\nimport { StyledMovieInfoBar } from '../styles/StyledMovieInfoBar';\r\n\r\nconst MovieInfoBar = ({ time, budget, revenue, homepage }) => {\r\n\r\n    let isOnNetflix = false;\r\n    isOnNetflix = `${homepage}`.includes('netflix');\r\n\r\n    return (\r\n        <StyledMovieInfoBar>      \r\n                {\r\n                    !isOnNetflix ? (\r\n                        <div className=\"movieinfobar-content\">\r\n                            <div className=\"movieinfobar-content-col\">\r\n                                <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n                                <span className=\"movieinfobar-info\">\r\n                                    Running Time: {calcTime(time)}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"movieinfobar-content-col\">\r\n                                <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\r\n                                <span className=\"movieinfobar-info\">\r\n                                    Budget: {convertMoney(budget)}\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div className=\"movieinfobar-content-col\">\r\n                            <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\r\n                                <span className=\"movieinfobar-info\">\r\n                                    Revenue: {convertMoney(revenue)}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n    \r\n                        <div className=\"movieinfobar-netflix\">\r\n                            <span className=\"movieinfobar-info\">\r\n                                <a href={`${homepage}`} rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                    <img src={Netflix} alt=\"watch on netflix\" style={{width: '120px'}}/>\r\n                                </a>\r\n                            </span>\r\n                        </div>\r\n                        \r\n                    )\r\n                }\r\n        </StyledMovieInfoBar>\r\n    )\r\n}\r\n\r\n\r\nexport default MovieInfoBar;","import styled from 'styled-components';\n\nexport const StyledActor = styled.div`\n  font-family: 'Abel', sans-serif;\n  color: #fff;\n  background: #1c1c1c;\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n\n  img {\n    display: block;\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 15px;\n  }\n\n  .actor-name {\n    display: block;\n    font-size: 18px;\n    margin: 10px 0 0 0;\n  }\n\n  .actor-character {\n    display: block;\n    font-size: 16px;\n    margin: 0 0 10px 0;\n  }\n`;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport NoImage from '../../images/no_image.jpg';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\n\r\nimport { StyledActor } from '../styles/StyledActor';\r\n\r\nconst Actor = ({ actor, clickable }) =>  (\r\n    <StyledActor>\r\n        {clickable ? (\r\n            <Link to={`/React-IMDB/people/${actor.id}`}>\r\n                <img \r\n                src={actor.profile_path \r\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}` \r\n                    : NoImage } alt=\"actor-thumb\" \r\n                />\r\n            </Link>\r\n        ) : (\r\n            <img \r\n            src={actor.profile_path \r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}` \r\n                : NoImage } alt=\"actor-thumb\" \r\n            />\r\n        )}\r\n  \r\n        <span className=\"actor-name\">{actor.name}</span>\r\n        <span className=\"actor-character\">{actor.character}</span>\r\n    </StyledActor>\r\n)\r\n\r\n\r\nexport default Actor;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport NoImage from '../../images/no_image.jpg';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\n\r\nimport { StyledActor } from '../styles/StyledActor';\r\n\r\nconst CrewMember = ({ member, clickable }) =>  (\r\n    <StyledActor>\r\n        {clickable ? (\r\n            <Link to={`/React-IMDB/people/${member.id}`}>\r\n                <img \r\n                src={member.profile_path \r\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${member.profile_path}` \r\n                    : NoImage } alt=\"actor-thumb\" \r\n                />\r\n            </Link>\r\n        ) : (\r\n            <img \r\n            src={member.profile_path \r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${member.profile_path}` \r\n                : NoImage } alt=\"actor-thumb\" \r\n            />\r\n        )}\r\n  \r\n        <span className=\"actor-name\">{member.name}</span>\r\n        <span className=\"actor-character\">{member.job}</span>\r\n    </StyledActor>\r\n)\r\n\r\n\r\nexport default CrewMember;","import React from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\r\nimport NoImage from '../images/no_image.jpg';\r\n\r\n// Components\r\nimport NavigationMovie from '../components/elements/NavigationMovie';\r\nimport MovieInfo from '../components/elements/MovieInfo'\r\nimport MovieInfoBar from '../components/elements/MovieInfoBar'\r\nimport Actor from '../components/elements/Actor'\r\nimport CrewMember from '../components/elements/CrewMember'\r\n\r\nimport Grid from '../components/elements/Grid';\r\nimport Spinner from '../components/elements/Spinner';\r\n\r\n// Hooks\r\nimport { useMovieFetch } from '../hooks/useMovieFetch';\r\nimport { useSimilarMoviesFetch } from '../hooks/useSimilarMoviesFetch';\r\nimport MovieThumb from '../components/elements/MovieThumb';\r\n\r\nconst MoviePage = () => {\r\n\r\n    let { movieId } = useParams();\r\n    const [movie, loading, error] = useMovieFetch(movieId);\r\n    const [{ state: {simliarMovies}, loadingSimilar, errorSimilar}] = useSimilarMoviesFetch(movieId);\r\n    if (error || errorSimilar) return <div>Something went wrong...</div>;\r\n    if (loading || loadingSimilar) return <Spinner/> ;\r\n\r\n    return (\r\n        <div style={{paddingTop: '60px'}}>\r\n            <NavigationMovie title={movie.title} />\r\n            <MovieInfo movie={movie} />\r\n            <MovieInfoBar time={movie.runtime} homepage={movie.homepage} budget={movie.budget} revenue={movie.revenue}/>\r\n            <Grid header=\"Cast\">\r\n                {\r\n                    movie.actors.map((actor, index) => (\r\n                        index < 10 &&\r\n                            <Actor key={actor.credit_id} actor={actor} clickable />\r\n                    ))\r\n                }\r\n            </Grid>\r\n            <hr style={{height: '50px', border: 'none', backgroundColor: '#333'}} />\r\n            <Grid header=\"Crew\">\r\n                {\r\n                    movie.crew.map((member, index) => (\r\n                        index < 10 &&\r\n                            <CrewMember key={member.credit_id} member={member} clickable />\r\n                    ))\r\n                }\r\n            </Grid>\r\n            <hr style={{height: '50px', border: 'none', backgroundColor: '#333'}} />\r\n            <Grid header=\"Similar Movies\">\r\n                {\r\n                    simliarMovies.map((movie, index) => (\r\n                        (movie.id.toString !== movieId.toString) && index < 20 && \r\n                            <MovieThumb \r\n                                key={movie.id} \r\n                                clickable \r\n                                image={movie.poster_path \r\n                                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                                    : NoImage} \r\n                                movieId={movie.id}\r\n                                movieName={movie.original_title}\r\n                        />\r\n                    ))\r\n                }\r\n            </Grid>\r\n            <hr style={{height: '50px', border: 'none', backgroundColor: '#333'}} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MoviePage;","import { useEffect, useCallback, useState } from 'react';\r\nimport { API_URL, API_KEY } from '../config';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const useMovieFetch = (movieId) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [state, setState] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setError(false);\r\n        setLoading(true);\r\n\r\n        try {\r\n            const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\r\n            const response = await fetch(endpoint)\r\n            if (response.status === 404) {\r\n                history.goBack();\r\n            }\r\n            const moviesResult = await response.json();\r\n            const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n            const creditsResult = await (await fetch(creditsEndpoint)).json();\r\n            const directors = creditsResult.crew.filter(\r\n                member => member.job === 'Director'\r\n            );\r\n\r\n            setState({\r\n                ...moviesResult,\r\n                actors: creditsResult.cast,\r\n                directors,\r\n                crew: creditsResult.crew\r\n            });\r\n            \r\n        } catch (error) {\r\n            setError(true);\r\n            console.error(error)\r\n        }\r\n\r\n        setLoading(false);\r\n    }, [movieId, history])\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [fetchData]);\r\n\r\n    return [state, loading, error];\r\n}","import { useState, useEffect, useCallback } from 'react';\r\nimport { API_URL, API_KEY } from '../config';\r\n\r\nexport const useSimilarMoviesFetch = (movie_id) => {\r\n    const [state, setState] = useState({ simliarMovies: [] });\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n  \r\n    const fetchSimilarMovies = useCallback(async (movieId) => {\r\n      setError(false);\r\n      setLoading(true);\r\n      \r\n      const endpoint = `${API_URL}movie/${movie_id}/similar?api_key=${API_KEY}`;\r\n      const isLoadMore = endpoint.search('page');\r\n  \r\n      try {\r\n        const movieResult = await (await fetch(endpoint)).json();\r\n\r\n        setState(prev => ({\r\n          ...prev,\r\n          simliarMovies:\r\n            isLoadMore !== -1\r\n              ? [...prev.simliarMovies, ...movieResult.results]\r\n              : [...movieResult.results],\r\n          currentPageSimilar: movieResult.page,\r\n          totalPagesSimilar: movieResult.total_pages,\r\n        }));\r\n\r\n      } catch (error) {\r\n        setError(true);\r\n        console.error(error);\r\n      }\r\n      setLoading(false);\r\n    }, [movie_id]);\r\n\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        fetchSimilarMovies(`${API_URL}movie/${movie_id}/similar?api_key=${API_KEY}`)\r\n    }, [fetchSimilarMovies, movie_id]);\r\n\r\n    return [{ state, loading, error }, fetchSimilarMovies]\r\n}","import styled from 'styled-components';\n\nexport const StyledSearchBar = styled.div`\n  width: 100%;\n  height: 105px;\n  background: #1c1c1c;\n  padding: 25px 20px 0px 20px;\n  box-sizing: border-box;\n  color: #fff;\n`;\n\nexport const StyledSearchBarContent = styled.div`\n  max-width: 1280px;\n  width: 100%;\n  height: 55px;\n  background: #353535;\n  margin: 0 auto;\n  border-radius: 40px;\n  position: relative;\n  color: #fff;\n\n  .fa-search {\n    position: absolute;\n    left: 20px;\n    top: 12px;\n    color: #fff;\n    z-index: 1000;\n  }\n\n  input {\n    font-family: 'Abel', sans-serif;\n    font-size: 28px;\n    position: absolute;\n    left: 0px;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: #fff;\n    box-sizing: border-box;\n\n    :focus {\n      outline: none;\n    }\n\n    @media screen and (max-width: 720px) {\n      font-size: 28px;\n    }\n  }\n`;\n","import React, { useState, useRef } from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\n\r\nimport { StyledSearchBar, StyledSearchBarContent } from '../styles/StyledSearchBar';\r\n\r\nconst SearchBar = ({ title, callback }) => {\r\n\r\n    const [state, setState] = useState('');\r\n    const timeOut = useRef(null);\r\n\r\n    const doSearch = (event) => {\r\n        const { value } = event.target;\r\n\r\n        clearTimeout(timeOut.current);\r\n        setState(value);\r\n\r\n        timeOut.current = setTimeout(() => {\r\n            callback(value);\r\n        }, 500);\r\n    }\r\n\r\n    return (\r\n        <StyledSearchBar>\r\n            <StyledSearchBarContent>\r\n                <FontAwesome className=\"fa-search\" name='search' size='2x' />\r\n                <input type='text' placeholder={title} onChange={doSearch} value={state} />\r\n            </StyledSearchBarContent>\r\n        </StyledSearchBar>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\n\r\n// API CONSTANTS\r\nimport { IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE, SEARCH_BASE_URL, POPULAR_BASE_URL_MOVIES, TOP_RATED_BASE_URL_MOVIES } from '../config';\r\n\r\n// Components\r\nimport HeroImage from '../components/elements/HeroImage';\r\nimport SearchBar from '../components/elements/SearchBar';\r\nimport Grid from '../components/elements/Grid';\r\nimport MovieThumb from '../components/elements/MovieThumb';\r\nimport LoadMoreButton from '../components/elements/LoadMoreButton';\r\nimport Spinner from '../components/elements/Spinner';\r\n\r\n// Hooks\r\nimport { usePopularMoviesFetch } from '../hooks/usePopularMoviesFetch';\r\nimport { useTopRatedMoviesFetch } from '../hooks/useTopRatedMoviesFetch';\r\n\r\nimport NoImage from '../images/no_image.jpg';\r\n\r\nconst MoviesPage = () => {\r\n   \r\n    const [{ state: { movies, heroImage, currentPage, totalPages }, loading, error }, fetchPopularMovies ] = usePopularMoviesFetch();\r\n    const [{ state: { topRatedMovies, heroImageTopRated, currentPageTopRated, totalPagesTopRated }, loadingTopRated, errorTopRated }, fetchTopRatedMovies ] = useTopRatedMoviesFetch();\r\n    const [searchTerm, setSearchTerm] = React.useState('');\r\n   \r\n    if (!movies[0] || !topRatedMovies[0])  return <Spinner /> \r\n    if (error || errorTopRated) return <div>Something went wrong...</div>\r\n    \r\n    const loadMoreMovies = () => {\r\n        const searchEndpoint = `${SEARCH_BASE_URL}${searchTerm}&page=${currentPage + 1}`;\r\n        const popularEndpoint = `${POPULAR_BASE_URL_MOVIES}&page=${currentPage + 1}`;\r\n\r\n        const endpoint = searchTerm ? searchEndpoint : popularEndpoint;\r\n        fetchPopularMovies(endpoint);\r\n    }\r\n    const loadMoreTopRatedMovies = () => {\r\n        const endpoint = `${TOP_RATED_BASE_URL_MOVIES}&page=${currentPageTopRated + 1}`;\r\n        fetchTopRatedMovies(endpoint);\r\n    }\r\n    \r\n    const searchMovies = search => {\r\n        const endpoint = search ? SEARCH_BASE_URL + search : POPULAR_BASE_URL_MOVIES;\r\n        setSearchTerm(search);\r\n        fetchPopularMovies(endpoint);\r\n    }\r\n\r\n    const heroImageURL = `${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`;\r\n    const heroImageTitle = heroImage.original_title;\r\n    const heroImageText = heroImage.overview;\r\n\r\n    return (\r\n        <div style={{paddingTop: '60px'}}>\r\n            {\r\n                !searchTerm && (\r\n                    <HeroImage \r\n                        image={heroImageURL}\r\n                        title={heroImageTitle}\r\n                        text={heroImageText}\r\n                    />\r\n                )\r\n            }\r\n            <SearchBar title=\"Seach Movies...\" callback={searchMovies} />\r\n            <Grid header={searchTerm ? searchTerm : 'Popular Movies'}>\r\n                {\r\n                    movies.map(movie => (\r\n                        <MovieThumb \r\n                            key={movie.id} \r\n                            clickable \r\n                            image={movie.poster_path \r\n                                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                                : NoImage} \r\n                            movieId={movie.id}\r\n                            movieName={movie.original_title}\r\n                        />\r\n                    ))\r\n                }\r\n            </Grid>\r\n            {\r\n                loading && <Spinner/>\r\n            }\r\n            { currentPage < totalPages && !loading && \r\n                <LoadMoreButton text=\"Load More\" callback={loadMoreMovies} />\r\n            }\r\n            <hr style={{height: '50px', border: 'none', backgroundColor: '#333'}} />\r\n\r\n            {\r\n                !searchTerm && (\r\n                    <Grid header={'Top Rated Movies'}>\r\n                        {\r\n                            topRatedMovies.map(movie => (\r\n                                <MovieThumb \r\n                                    key={movie.id} \r\n                                    clickable \r\n                                    image={movie.poster_path \r\n                                        ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                                        : NoImage} \r\n                                    movieId={movie.id}\r\n                                    movieName={movie.original_title}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </Grid>\r\n                )\r\n            }\r\n            { currentPageTopRated < totalPagesTopRated && !loadingTopRated && !searchTerm && \r\n                \r\n                <LoadMoreButton text=\"Load More\" callback={loadMoreTopRatedMovies} />\r\n                \r\n            }\r\n            {\r\n                loadingTopRated && <Spinner/>\r\n            }\r\n            <hr style={{height: '50px', border: 'none', backgroundColor: '#333'}} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MoviesPage;","import { useState, useEffect } from 'react';\r\nimport { API_URL, API_KEY } from '../config';\r\n\r\nexport const useTopRatedMoviesFetch = searchTerm => {\r\n    const [state, setState] = useState({ topRatedMovies: [] });\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n  \r\n    const fetchTopRatedMovies = async endpoint => {\r\n      setError(false);\r\n      setLoading(true);\r\n  \r\n      const isLoadMore = endpoint.search('page');\r\n  \r\n      try {\r\n        const movieResult = await (await fetch(endpoint)).json();\r\n\r\n        setState(prev => ({\r\n          ...prev,\r\n          topRatedMovies:\r\n            isLoadMore !== -1\r\n              ? [...prev.topRatedMovies, ...movieResult.results]\r\n              : [...movieResult.results],\r\n          heroImageTopRated: prev.heroImageTopRated || movieResult.results[0],\r\n          currentPageTopRated: movieResult.page,\r\n          totalPagesTopRated: movieResult.total_pages,\r\n        }));\r\n\r\n      } catch (error) {\r\n        setError(true);\r\n        console.error(error);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fetchTopRatedMovies(`${API_URL}movie/top_rated?api_key=${API_KEY}`)\r\n    }, []);\r\n\r\n    return [{ state, loading, error }, fetchTopRatedMovies]\r\n}","import React from 'react';\r\n\r\n// API CONSTANTS\r\nimport { IMAGE_BASE_URL, BACKDROP_SIZE, SEARCH_BASE_URL_SHOWS, POSTER_SIZE, POPULAR_BASE_URL_SHOWS, TOP_RATED_BASE_URL_SHOWS } from '../config';\r\n\r\n// Components\r\nimport HeroImage from '../components/elements/HeroImage';\r\nimport SearchBar from '../components/elements/SearchBar';\r\nimport Grid from '../components/elements/Grid';\r\nimport LoadMoreButton from '../components/elements/LoadMoreButton';\r\nimport Spinner from '../components/elements/Spinner';\r\nimport ShowThumb from '../components/elements/ShowThumb';\r\n\r\n// Hooks\r\nimport { usePopularShowsFetch } from '../hooks/usePopularShowsFetch';\r\nimport { useTopRatedShowsFetch } from '../hooks/useTopRatedShowsFetch';\r\n\r\nimport NoImage from '../images/no_image.jpg';\r\n\r\nconst ShowsPage = () => {\r\n   \r\n    const [{ state: { shows, heroImageShow, currentPageShow, totalPagesShow }, loadingShow, errorShow }, fetchPopularShows ] = usePopularShowsFetch();\r\n    const [{ state: { topRatedShows, heroImageTopRated, currentPageTopRated, totalPagesTopRated }, loadingTopRated, errorTopRated }, fetchTopRatedShows ] = useTopRatedShowsFetch();\r\n    const [searchTerm, setSearchTerm] = React.useState('');\r\n\r\n    if (!shows[0] || !topRatedShows[0])  return <Spinner /> \r\n    if (errorShow || errorTopRated) return <div>Something went wrong...</div>\r\n    \r\n    const loadMoreShows = () => {\r\n        const endpoint = `${POPULAR_BASE_URL_SHOWS}&page=${currentPageShow + 1}`;\r\n        fetchPopularShows(endpoint);\r\n    }\r\n\r\n    const loadMoreTopRatedShows = () => {\r\n        const endpoint = `${TOP_RATED_BASE_URL_SHOWS}&page=${currentPageTopRated + 1}`;\r\n        fetchTopRatedShows(endpoint);\r\n    }\r\n\r\n    const searchShows = search => {\r\n        const endpoint = search ? SEARCH_BASE_URL_SHOWS + search : POPULAR_BASE_URL_SHOWS;\r\n        setSearchTerm(search);\r\n        fetchPopularShows(endpoint);\r\n    }\r\n\r\n    const heroImageURL = `${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImageShow.backdrop_path}`;\r\n    const heroImageTitle = heroImageShow.original_name;\r\n    const heroImageText = heroImageShow.overview;\r\n\r\n    return (\r\n        <div style={{paddingTop: '60px'}}>\r\n            {\r\n                !searchTerm && (\r\n                    <HeroImage \r\n                        image={heroImageURL}\r\n                        title={heroImageTitle}\r\n                        text={heroImageText}\r\n                    />\r\n                )\r\n            }\r\n            <SearchBar title=\"Search Shows...\" callback={searchShows} />\r\n\r\n            <Grid header={searchTerm ? searchTerm : 'Popular Shows'}>\r\n            {\r\n                shows.map(show => (\r\n                    <ShowThumb \r\n                        key={show.id} \r\n                        clickable \r\n                        image={show.poster_path \r\n                            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${show.poster_path}`\r\n                            : NoImage} \r\n                        showId={show.id}\r\n                        showName={show.original_title}\r\n                    />\r\n                ))\r\n            }\r\n            </Grid>\r\n            {\r\n                loadingShow && <Spinner/>\r\n            }\r\n            {   currentPageShow < totalPagesShow && !loadingShow && \r\n                    <LoadMoreButton text=\"Load More\" callback={loadMoreShows} />\r\n            }\r\n            <hr style={{height: '50px', border: 'none', backgroundColor: '#333'}} />\r\n            {\r\n                !searchTerm && (\r\n                    <Grid header={'Top Rated Shows'}>\r\n                        {\r\n                            topRatedShows.map(show => (\r\n                                <ShowThumb \r\n                                    key={show.id} \r\n                                    clickable \r\n                                    image={show.poster_path \r\n                                        ? `${IMAGE_BASE_URL}${POSTER_SIZE}${show.poster_path}`\r\n                                        : NoImage} \r\n                                    showId={show.id}\r\n                                    showName={show.original_title}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </Grid>\r\n                )\r\n            }\r\n            { currentPageTopRated < totalPagesTopRated && !loadingTopRated && !searchTerm && \r\n                \r\n                <LoadMoreButton text=\"Load More\" callback={loadMoreTopRatedShows} />\r\n                \r\n            }\r\n            {\r\n                loadingTopRated && <Spinner/>\r\n            }\r\n            <hr style={{height: '50px', border: 'none', backgroundColor: '#333'}} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowsPage;","import { useState, useEffect } from 'react';\r\nimport { API_URL, API_KEY } from '../config';\r\n\r\nexport const useTopRatedShowsFetch = searchTerm => {\r\n    const [state, setState] = useState({ topRatedShows: [] });\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n  \r\n    const fetchTopRatedShows = async endpoint => {\r\n      setError(false);\r\n      setLoading(true);\r\n  \r\n      const isLoadMore = endpoint.search('page');\r\n  \r\n      try {\r\n        const showsResult = await (await fetch(endpoint)).json();\r\n\r\n        setState(prev => ({\r\n          ...prev,\r\n          topRatedShows:\r\n            isLoadMore !== -1\r\n              ? [...prev.topRatedShows, ...showsResult.results]\r\n              : [...showsResult.results],\r\n          heroImageTopRated: prev.heroImageTopRated || showsResult.results[0],\r\n          currentPageTopRated: showsResult.page,\r\n          totalPagesTopRated: showsResult.total_pages,\r\n        }));\r\n\r\n      } catch (error) {\r\n        setError(true);\r\n        console.error(error);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fetchTopRatedShows(`${API_URL}tv/top_rated?api_key=${API_KEY}`)\r\n    }, []);\r\n\r\n    return [{ state, loading, error }, fetchTopRatedShows]\r\n}","import React from 'react';\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\n// Styled Components\r\nimport { StyledNavigation } from '../styles/StyledNavigation';\r\n\r\n// TODO: \r\n//  eclipse movie name capping it at 10 chars long\r\n//\r\n\r\nconst NavigationShow = ({ title, seasonNumber }) => {\r\n\r\n    const { showId } = useParams();\r\n    \r\n    let formattedShowName = '';\r\n    const showName = `${title}`;\r\n    const showNameLength = showName.length;\r\n    showNameLength > 14 ? formattedShowName = showName.substring(0, 14) + '...': formattedShowName = showName;    \r\n\r\n    if (!seasonNumber) return (\r\n        <StyledNavigation>\r\n            <div className=\"navigation-content\">\r\n                <Link to='/React-IMDB'>\r\n                    <p>Home</p>\r\n                </Link>\r\n\r\n                <p style={{opacity: '0.6'}}>|</p>\r\n\r\n                <Link to='/React-IMDB/shows'>\r\n                    <p>Shows</p>\r\n                </Link>\r\n\r\n                <p style={{opacity: '0.6'}}>|</p>\r\n\r\n                <p style={{opacity: '0.6'}}>{formattedShowName}</p> \r\n\r\n            </div>\r\n        </StyledNavigation>\r\n    ) \r\n    \r\n    return (\r\n        <StyledNavigation>\r\n            <div className=\"navigation-content\">\r\n                <Link to='/React-IMDB'>\r\n                    <p>Home</p>\r\n                </Link>\r\n\r\n                <p style={{opacity: '0.6'}}>|</p>\r\n\r\n                <Link to='/React-IMDB/shows'>\r\n                    <p>Shows</p>\r\n                </Link>\r\n\r\n                <p style={{opacity: '0.6'}}>|</p>\r\n\r\n                <Link to={`/React-IMDB/shows/${showId}`}>\r\n                    <p>{formattedShowName}</p> \r\n                </Link>\r\n                \r\n                <p style={{opacity: '0.6'}}>|</p>\r\n                <p style={{opacity: '0.6'}}>Season {seasonNumber}</p> \r\n                       \r\n            </div>\r\n        </StyledNavigation>\r\n    )\r\n    \r\n}\r\n\r\nexport default NavigationShow;","import React from 'react';\r\n\r\nimport NoImage from '../../images/no_image.jpg';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\n\r\nimport ShowThumb from './ShowThumb';\r\n\r\nimport { StyledMovieInfo } from '../styles/StyledMovieInfo';\r\n\r\nconst ShowInfo = ({ show, season }) => {\r\n    \r\n    \r\n    if (!season) {\r\n        return (\r\n            <StyledMovieInfo backdrop={show.backdrop_path}>\r\n                <div className=\"movieinfo-content\">\r\n\r\n                    <div className=\"movieinfo-thumb\">\r\n                        <ShowThumb\r\n                            image={\r\n                                show.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${show.poster_path}`\r\n                                    : NoImage\r\n                            }\r\n                            clickable={false}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"movieinfo-text\">\r\n                        <h1>{show.name}</h1>\r\n                        <h3>Plot</h3>\r\n                        <p>{show.overview}</p>\r\n            \r\n\r\n                        <div className=\"rating-director\">\r\n                            <div>\r\n                                <h3>RATING</h3>\r\n                                <div className=\"score\">{show.vote_average}</div>\r\n                            </div>\r\n                        \r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n            </StyledMovieInfo>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <StyledMovieInfo backdrop={show.backdrop_path}>\r\n            <div className=\"movieinfo-content\">\r\n\r\n                <div className=\"movieinfo-thumb\">\r\n                    <ShowThumb\r\n                        image={\r\n                            show.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${show.poster_path}`\r\n                                : NoImage\r\n                        }\r\n                        clickable={false}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"movieinfo-text\">\r\n                    <h1>{season.name}</h1>\r\n                    <h3>Plot</h3>\r\n                    <p>{season.overview}</p>\r\n        \r\n\r\n                    <div className=\"rating-director\">\r\n                        <div>\r\n                            <h3>RATING</h3>\r\n                            <div className=\"score\">{show.vote_average}</div>\r\n                        </div>\r\n                    \r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </StyledMovieInfo>\r\n    )\r\n}\r\n\r\n\r\nexport default ShowInfo;","import React from 'react';\r\n\r\nimport Netflix from '../../images/netflix.png'\r\n\r\nimport { StyledMovieInfoBar } from '../styles/StyledMovieInfoBar';\r\n\r\nconst ShowInfoBar = ({ seasons, episodes, firstAirDate, homepage }) => {\r\n\r\n    let isOnNetflix = false;\r\n    isOnNetflix = `${homepage}`.includes('netflix');\r\n\r\n    return (\r\n        <StyledMovieInfoBar>      \r\n                {\r\n                    !isOnNetflix ? (\r\n                        <div className=\"movieinfobar-content\">\r\n                            <div className=\"movieinfobar-content-col\">\r\n                                <span className=\"movieinfobar-info\">\r\n                                    Seasons: {seasons}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"movieinfobar-content-col\">\r\n                                <span className=\"movieinfobar-info\">\r\n                                    Episodes: {episodes}\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div className=\"movieinfobar-content-col\">\r\n                                <span className=\"movieinfobar-info\">\r\n                                    First Air Date: {firstAirDate}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n    \r\n                        <div className=\"movieinfobar-netflix\">\r\n                            <span className=\"movieinfobar-info\">\r\n                                <a href={`${homepage}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                    <img src={Netflix} alt=\"watch on netflix\" style={{width: '120px'}}/>\r\n                                </a>\r\n                            </span>\r\n                        </div>\r\n                        \r\n                    )\r\n                }\r\n        </StyledMovieInfoBar>\r\n    )\r\n}\r\n\r\n\r\nexport default ShowInfoBar;","import React from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nimport { StyledThumb } from \"../styles/StyledThumb\";\r\n\r\nconst ShowSeasonThumb = ({ image, seasonNumber, clickable }) => {\r\n  let { showId } = useParams();\r\n\r\n  return (\r\n    <StyledThumb>\r\n      {clickable ? (\r\n        <Link to={`/React-IMDB/shows/${showId}/season/${seasonNumber}`}>\r\n          <img className=\"clickable\" src={image} alt=\"show-thumb\" />\r\n        </Link>\r\n      ) : (\r\n        <img src={image} alt=\"show-thumb\" />\r\n      )}\r\n    </StyledThumb>\r\n  );\r\n};\r\n\r\nexport default ShowSeasonThumb;\r\n","import { useEffect, useCallback, useState } from 'react';\r\nimport { API_URL, API_KEY } from '../config';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nexport const useShowFetch = (showId) => {\r\n    const history = useHistory();\r\n\r\n    const [state, setState] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setError(false);\r\n        setLoading(true);\r\n\r\n        try {\r\n            const endpoint = `${API_URL}tv/${showId}?api_key=${API_KEY}`;\r\n            const response = await fetch(endpoint);\r\n            if (response.status === 404) {\r\n                history.goBack();\r\n            }\r\n            const showResults = await response.json();\r\n\r\n            const creditsEndpoint = `${API_URL}tv/${showId}/credits?api_key=${API_KEY}`;\r\n            const creditsResult = await (await fetch(creditsEndpoint)).json();\r\n            \r\n            setState({\r\n                ...showResults,\r\n                actors: creditsResult.cast\r\n            });\r\n            \r\n        } catch (error) {\r\n            setError(true);\r\n            console.error(error)\r\n        }\r\n\r\n        setLoading(false);\r\n    }, [showId, history])\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [fetchData]);\r\n\r\n    return [state, loading, error];\r\n}","import React from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// Components\r\nimport NavigationShow from '../components/elements/NavigationShow';\r\nimport ShowInfo from '../components/elements/ShowInfo'\r\nimport ShowInfoBar from '../components/elements/ShowInfoBar'\r\nimport ShowSeasonThumb from '../components/elements/ShowSeasonThumb'\r\nimport Actor from '../components/elements/Actor'\r\n\r\nimport Grid from '../components/elements/Grid';\r\nimport Spinner from '../components/elements/Spinner';\r\n\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\r\nimport NoImage from '../images/no_image.jpg';\r\n\r\n\r\n\r\n// Hooks\r\nimport { useShowFetch } from '../hooks/useShowFetch';\r\n\r\nconst ShowPage = () => {\r\n\r\n    let { showId } = useParams();\r\n    const [show, loading, error] = useShowFetch(showId);\r\n\r\n    if (error) return <div>Something went wrong...</div>;\r\n    if (loading) return <Spinner/> ;\r\n\r\n    return (\r\n        <div style={{paddingTop: '60px'}}>\r\n            <NavigationShow title={show.name} />\r\n            <ShowInfo show={show} />\r\n            <ShowInfoBar \r\n                seasons={show.number_of_seasons}\r\n                episodes={show.number_of_episodes}\r\n                firstAirDate={show.first_air_date}\r\n            />\r\n            {/** SEASONS **/}\r\n            <Grid header=\"Seasons\">\r\n            {\r\n                show.seasons.map(season => (\r\n                    season.season_number !== 0 && \r\n                    <ShowSeasonThumb\r\n                        key={season.id}\r\n                        seasonId={season.id}\r\n                        seasonNumber={season.season_number}\r\n                        image={\r\n                            season.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${season.poster_path}`\r\n                                : NoImage\r\n                        }\r\n                        clickable\r\n                    />\r\n                ))\r\n            }\r\n            </Grid>\r\n            <hr style={{height: '50px', border: 'none', backgroundColor: '#333'}} />\r\n\r\n            {/** ACTORS **/}\r\n            <Grid header=\"Cast\">\r\n                {\r\n                    show.actors.map((actor, index) => (\r\n                        index < 10 &&\r\n                            <Actor key={actor.credit_id} actor={actor} clickable />\r\n                    ))\r\n                }\r\n            </Grid>\r\n            <hr style={{height: '50px', border: 'none', backgroundColor: '#333'}} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowPage;","import React from 'react';\r\n\r\nimport { StyledActor } from '../styles/StyledActor';\r\n\r\nconst Episode = ({ image, episode }) =>  (\r\n    <StyledActor>\r\n        <img src={image} alt=\"episode-thumb\" />\r\n        <span className=\"actor-name\">{episode.name}</span>\r\n        <span className=\"actor-character\">Rated: {episode.vote_average} / 10</span>\r\n    </StyledActor>\r\n)\r\n\r\n\r\nexport default Episode;","import React from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// Components\r\nimport NavigationShow from '../components/elements/NavigationShow';\r\nimport ShowInfo from '../components/elements/ShowInfo'\r\nimport ShowInfoBar from '../components/elements/ShowInfoBar'\r\nimport Episode from '../components/elements/Episode'\r\nimport Actor from '../components/elements/Actor'\r\n\r\nimport Grid from '../components/elements/Grid';\r\nimport Spinner from '../components/elements/Spinner';\r\n\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\r\nimport NoImage from '../images/no_image.jpg';\r\n\r\n// Hooks\r\nimport { useShowFetch } from '../hooks/useShowFetch';\r\nimport { useShowSeasonFetch } from '../hooks/useShowSeasonFetch';\r\n\r\nconst ShowSeasonPage = () => {\r\n\r\n    let { showId, seasonNumber } = useParams();\r\n    const [show, loading, error] = useShowFetch(showId);\r\n    const [season, seasonLoading, seasonError] = useShowSeasonFetch(showId, seasonNumber);\r\n\r\n    if (error || seasonError) return <div>Something went wrong...</div>;\r\n    if (loading || seasonLoading) return <Spinner/>;\r\n\r\n    return (\r\n        <div style={{paddingTop: '60px'}}>\r\n            <NavigationShow title={show.name} seasonNumber={seasonNumber} />\r\n            <ShowInfo show={show} season={season} />\r\n            <ShowInfoBar \r\n                seasons={show.number_of_seasons}\r\n                episodes={season.episodes.length}\r\n                firstAirDate={season.air_date}\r\n            />\r\n            {/** EPISODES **/}\r\n            <Grid header=\"Episodes\">\r\n            {\r\n                season.episodes.map(episode => (\r\n                    <Episode\r\n                        key={episode.id}\r\n                        episode={episode}\r\n                        image={\r\n                            episode.still_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${episode.still_path}`\r\n                                : NoImage\r\n                        }\r\n                    />\r\n                ))\r\n            }\r\n            </Grid>\r\n            <hr style={{height: '50px', border: 'none', backgroundColor: '#333'}} />\r\n            {/** ACTORS **/}\r\n            <Grid header=\"Cast\">\r\n                {\r\n                    show.actors.map((actor, index) => (\r\n                        index < 10 &&\r\n                            <Actor key={actor.credit_id} actor={actor} clickable />\r\n                    ))\r\n                }\r\n            </Grid>\r\n            <hr style={{height: '50px', border: 'none', backgroundColor: '#333'}} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowSeasonPage;","import { useEffect, useCallback, useState } from 'react';\r\nimport { API_URL, API_KEY } from '../config';\r\n\r\nexport const useShowSeasonFetch = (showId, seasonNumber) => {\r\n    const [state, setState] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setError(false);\r\n        setLoading(true);\r\n\r\n        try {\r\n            const endpoint = `${API_URL}tv/${showId}/season/${seasonNumber}?api_key=${API_KEY}`;\r\n            const seasonResults = await (await fetch(endpoint)).json();\r\n            \r\n            setState({\r\n                ...seasonResults,\r\n                episodes: seasonResults.episodes\r\n            });\r\n            \r\n        } catch (error) {\r\n            setError(true);\r\n            console.error(error)\r\n        }\r\n\r\n        setLoading(false);\r\n    }, [showId, seasonNumber])\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [fetchData]);\r\n\r\n    return [state, loading, error];\r\n}","import React from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../config';\r\nimport NoImage from '../images/no_image.jpg';\r\n\r\n// Components\r\nimport LoadMoreButton from '../components/elements/LoadMoreButton';\r\nimport HeroImage from '../components/elements/HeroImage';\r\nimport Grid from '../components/elements/Grid';\r\nimport Spinner from '../components/elements/Spinner';\r\n\r\n// Hooks\r\nimport { useMovieByGenreFetch } from '../hooks/useMovieByGenreFetch';\r\n\r\nimport MovieThumb from '../components/elements/MovieThumb';\r\n\r\nconst GenrePage = () => {\r\n    let { genreId, genreName } = useParams();\r\n    const [{ state: { movies, heroImage, currentPage, totalPages }, loading, error }, fetchMoviesByGenre ] = useMovieByGenreFetch(genreId);\r\n\r\n    if (!movies[0] || loading) return <Spinner/> ;\r\n    if (error) return <div>Something went wrong...</div>;\r\n\r\n    const loadMoreMovies = () => {\r\n\r\n        fetchMoviesByGenre(`${API_URL}discover/movie?api_key=${API_KEY}&with_genres=${genreId}&page=${currentPage + 1}`);\r\n    }\r\n\r\n    return (\r\n        <div style={{paddingTop: '60px'}}>\r\n            <HeroImage \r\n                image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\r\n                title={heroImage.original_title}\r\n                text={heroImage.overview}\r\n            />\r\n            <Grid header={`${genreName}`}>\r\n                {\r\n                    movies.map(movie => (\r\n                        <MovieThumb \r\n                            key={movie.id} \r\n                            clickable \r\n                            image={movie.poster_path \r\n                                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                                : NoImage} \r\n                            movieId={movie.id}\r\n                            movieName={movie.original_title}\r\n                        />\r\n                    ))\r\n                }\r\n            </Grid>\r\n            {\r\n                loading && <Spinner/>\r\n            }\r\n            { currentPage < totalPages && !loading && \r\n                <LoadMoreButton text=\"Load More\" callback={loadMoreMovies} />\r\n            }\r\n            <hr style={{height: '50px', border: 'none', backgroundColor: '#333'}} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GenrePage;","import { useState, useEffect } from 'react';\r\nimport { API_URL, API_KEY } from '../config';\r\n\r\nexport const useMovieByGenreFetch = (genreId) => {\r\n    const [state, setState] = useState({ movies: [] });\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n\r\n    const fetchMoviesByGenre = async endpoint => {\r\n        setError(false);\r\n        setLoading(true);\r\n    \r\n        const isLoadMore = endpoint.search('page');\r\n    \r\n        try {\r\n          const movieResult = await (await fetch(endpoint)).json();\r\n          const randomIndex = Math.floor(Math.random() * 20)\r\n          setState(prev => ({\r\n            ...prev,\r\n            movies:\r\n              isLoadMore !== -1\r\n                ? [...prev.movies, ...movieResult.results]\r\n                : [...movieResult.results],\r\n            heroImage: prev.heroImage || movieResult.results[randomIndex],\r\n            currentPage: movieResult.page,\r\n            totalPages: movieResult.total_pages,\r\n          }));\r\n  \r\n        } catch (error) {\r\n          setError(true);\r\n          console.error(error);\r\n        }\r\n        setLoading(false);\r\n      };\r\n\r\n    useEffect(() => {\r\n        fetchMoviesByGenre(`${API_URL}discover/movie?api_key=${API_KEY}&with_genres=${genreId}`)\r\n    }, [genreId]);\r\n\r\n    return [{ state, loading, error }, fetchMoviesByGenre]\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\n// Styled Components\r\nimport { StyledNavigation } from '../styles/StyledNavigation';\r\n\r\n// TODO: \r\n//  eclipse movie name capping it at 10 chars long\r\n//\r\n\r\nconst Navigation = ({ title, movie, actor }) => {\r\n\r\n    let formattedMovieName = '';\r\n    if (!actor) {\r\n        const movieName = `${title}` ;\r\n        const movieNameLength = movieName.length;\r\n        movieNameLength > 14 ? formattedMovieName = movieName.substring(0, 14) + '...': formattedMovieName = movieName;    \r\n    } else {\r\n        formattedMovieName=title;\r\n    }\r\n    \r\n\r\n    return (\r\n        <StyledNavigation>\r\n            <div className=\"navigation-content\">\r\n                <Link to='/React-IMDB'>\r\n                    <p>Home</p>\r\n                </Link>\r\n                <p>|</p>\r\n                { actor && <><p>People</p><p>|</p></>}\r\n                <p style={{opacity: '0.6'}}>{formattedMovieName}</p>\r\n            </div>\r\n        </StyledNavigation>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import styled from 'styled-components';\r\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\r\n\r\nexport const StyledActorInfo = styled.div`\r\n  background: ${props =>\r\n    props.backdrop\r\n      ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.backdrop}')`\r\n      : '#000'};\r\n  background-size: cover !important;\r\n  background-position: center !important;\r\n  width: 100%;\r\n  padding: 40px 20px;\r\n  box-sizing: border-box;\r\n  animation: animateMovieinfo 1s;\r\n\r\n  .actorinfo-content {\r\n    max-width: 1280px;\r\n    min-height: 450px;\r\n    margin: 0 auto;\r\n    background: rgb(0, 0, 0, 0.7);\r\n    border-radius: 20px;\r\n    position: relative;\r\n  }\r\n\r\n  .actorinfo-thumb {\r\n    width: 300px;\r\n    float: left;\r\n\r\n    @media screen and (max-width: 768px) {\r\n      width: 100% !important;\r\n    }\r\n  }\r\n\r\n  .actorinfo-text {\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    padding: 40px;\r\n    color: #fff;\r\n    overflow: hidden;\r\n\r\n    h1 {\r\n      font-family: 'Abel', sans-serif;\r\n      font-size: 48px;\r\n      margin: 0;\r\n\r\n      @media screen and (max-width: 1000px) {\r\n        font-size: 32px !important;\r\n      }\r\n    }\r\n\r\n    h3 {\r\n      font-size: 16px;\r\n      line-height: 0;\r\n      margin-top: 30px;\r\n    }\r\n\r\n    p {\r\n      font-family: 'Abel', sans-serif;\r\n      font-size: 18px;\r\n      line-height: 26px;\r\n    }\r\n  }\r\n\r\n  .rating-director {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n  }\r\n\r\n  .score {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 35px;\r\n    height: 35px;\r\n    background: #fff;\r\n    color: #000;\r\n    font-weight: 800;\r\n    border-radius: 25px;\r\n    margin: 0px 0 0 0;\r\n  }\r\n\r\n  .director {\r\n    margin: 0 0 0 40px;\r\n\r\n    p {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    min-height: 600px;\r\n    height: auto;\r\n  }\r\n\r\n  @keyframes animateMovieinfo {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport NoImage from '../../images/no_image.jpg';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\n\r\nimport MovieThumb from './MovieThumb';\r\n\r\nimport { StyledActorInfo } from '../styles/StyledActorInfo';\r\n\r\nconst ActorInfo = ({ actor }) => (\r\n    <StyledActorInfo>\r\n        <div className=\"actorinfo-content\">\r\n            <div className=\"actorinfo-thumb\">\r\n                <MovieThumb\r\n                    image={\r\n                        actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n                            : NoImage\r\n                    }\r\n                    clickable={false}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"actorinfo-text\">\r\n                <h1>{actor.name}</h1>\r\n                <h3>Biography</h3>\r\n                <p>{actor.biography}</p>\r\n\r\n                <div className=\"rating-director\">\r\n                <div>\r\n                  <h3>POPULARITY</h3>\r\n                  <div className=\"score\">{Math.round(actor.popularity * 10) / 10}</div>\r\n                </div>\r\n    \r\n              </div>\r\n\r\n            </div>\r\n        </div>\r\n    </StyledActorInfo>\r\n)\r\n\r\n\r\nexport default ActorInfo;","import React from 'react';\r\n\r\nimport { StyledMovieInfoBar } from '../styles/StyledMovieInfoBar';\r\n\r\nconst ActorInfoBar = ({ birthday, knownFor, placeOfBirth }) => {\r\n\r\n    return (\r\n        <StyledMovieInfoBar>      \r\n            \r\n            <div className=\"movieinfobar-content\">\r\n                <div className=\"movieinfobar-content-col\">\r\n                    <span className=\"movieinfobar-info\">\r\n                        Birthday: {birthday}\r\n                    </span>\r\n                </div>\r\n                <div className=\"movieinfobar-content-col\">\r\n                    <span className=\"movieinfobar-info\">\r\n                        Known For: {knownFor}\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"movieinfobar-content-col\">\r\n                    <span className=\"movieinfobar-info\">\r\n                        Born in: {placeOfBirth}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n                    \r\n        </StyledMovieInfoBar>\r\n    )\r\n}\r\n\r\n\r\nexport default ActorInfoBar;","import styled from 'styled-components';\r\n\r\nexport const StyledRole = styled.div`\r\n  font-family: 'Abel', sans-serif;\r\n  color: #fff;\r\n  background: #1c1c1c;\r\n  border-radius: 20px;\r\n  padding: 5px;\r\n  text-align: center;\r\n\r\n  img {\r\n    display: block;\r\n    width: 100%;\r\n    height: 200px;\r\n    object-fit: cover;\r\n    border-radius: 15px;\r\n  }\r\n\r\n  .role-name {\r\n    display: block;\r\n    font-size: 18px;\r\n    margin: 10px 0 0 0;\r\n  }\r\n\r\n  .role-character {\r\n    display: block;\r\n    font-size: 16px;\r\n    margin: 0 0 10px 0;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport NoImage from '../../images/no_image.jpg';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\n\r\nimport { StyledRole } from '../styles/StyledRole';\r\n\r\nconst Role = ({ title, character, role, clickable }) =>  {\r\n    return (\r\n        <StyledRole>\r\n            {clickable ? (\r\n                <Link to={`/React-IMDB/movies/${role.id}`}>\r\n                    <img \r\n                    src={role.poster_path\r\n                        ? `${IMAGE_BASE_URL}${POSTER_SIZE}${role.poster_path}` \r\n                        : NoImage } alt=\"movie-thumb\" \r\n                    />\r\n                </Link>\r\n            ) : (\r\n                <img \r\n                src={role.poster_path\r\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${role.poster_path}` \r\n                    : NoImage } alt=\"movie-thumb\" \r\n                />\r\n            )}\r\n            <span className=\"role-name\">{title}</span>\r\n            <span className=\"role-character\">{character}</span>\r\n        </StyledRole>\r\n    )\r\n}\r\n\r\n\r\nexport default Role;","import React from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// Components\r\nimport Navigation from '../components/elements/Navigation';\r\nimport ActorInfo from '../components/elements/ActorInfo';\r\nimport ActorInfoBar from '../components/elements/ActorInfoBar';\r\nimport Role from '../components/elements/Role'\r\n\r\nimport Grid from '../components/elements/Grid';\r\nimport Spinner from '../components/elements/Spinner';\r\n\r\n// Hooks\r\nimport { useActorFetch } from '../hooks/useActorFetch';\r\n\r\nconst ActorPage = () => {\r\n\r\n    let { actorId } = useParams();\r\n    const [actor, loading, error] = useActorFetch(actorId);\r\n    \r\n    if (error) return <div>Something went wrong...</div>;\r\n    if (loading) return <Spinner/> ;\r\n\r\n    return (\r\n        <div style={{paddingTop: '60px'}}>\r\n            <Navigation actor title={actor.name} />\r\n            <ActorInfo actor={actor} />\r\n            <ActorInfoBar birthday={actor.birthday} knownFor={actor.known_for_department} placeOfBirth={actor.place_of_birth}/>\r\n            <Grid header=\"Known For\">\r\n                {\r\n                    actor.roles.map((role, index) => (\r\n                        index < 10 &&\r\n                            <Role key={role.credit_id} title={role.title} character={role.character} role={role} clickable />\r\n                    ))\r\n                }\r\n            </Grid>\r\n            <hr style={{height: '50px', border: 'none', backgroundColor: '#333'}} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActorPage;","import { useEffect, useCallback, useState } from 'react';\r\nimport { API_URL, API_KEY } from '../config';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const useActorFetch = (actorId) => {\r\n    const history = useHistory();\r\n\r\n    const [state, setState] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setError(false);\r\n        setLoading(true);\r\n\r\n        try {\r\n            const endpoint = `${API_URL}person/${actorId}?api_key=${API_KEY}`;\r\n            const response = await fetch(endpoint);\r\n            if (response.status === 404) {\r\n                history.goBack();\r\n            }\r\n            const result = await response.json();\r\n            const knownforEndpoint = `${API_URL}person/${actorId}/movie_credits?api_key=${API_KEY}`;\r\n            const knownForResults = await (await fetch(knownforEndpoint)).json();\r\n            \r\n            setState({\r\n                ...result,\r\n                roles: knownForResults.cast\r\n            });\r\n            \r\n        } catch (error) {\r\n            setError(true);\r\n            console.error(error)\r\n        }\r\n\r\n        setLoading(false);\r\n    }, [actorId, history])\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [fetchData]);\r\n\r\n    return [state, loading, error];\r\n}","import styled from \"styled-components\";\r\n\r\nexport const StyledNotFound = styled.div`\r\n\r\n    position: absolute;\r\n    top: 50px;\r\n    left: 0;\r\n    width: 100%;\r\n    font-family: 'Fira Sans' ,'Abel', sans-serif;\r\n    color: #fff;\r\n    overflow: hidden;\r\n    \r\n    .background {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: linear-gradient(#0C0E10, #446182);\r\n\r\n        .ground {\r\n            position: absolute;\r\n            bottom: 0;\r\n            width: 100%;\r\n            height: 25vh;\r\n            background: #0C0E10;\r\n\r\n            @media (max-width: 770px) {\r\n                height: 0vh;\r\n            }\r\n        }\r\n    }\r\n\r\n    .container {\r\n        position: relative;\r\n        margin: 0 auto;\r\n        width: 85%;\r\n        height: 95vh;\r\n        padding-bottom: 25vh;\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: space-around;\r\n\r\n        @media (max-width: 770px) {\r\n            flex-direction: column;\r\n            padding-bottom: 0vh;\r\n        }\r\n    }\r\n\r\n    .left-section, .right-section {\r\n        position: relative;\r\n    }\r\n\r\n    .left-section {\r\n        width: 40%;\r\n\r\n        @media (max-width: 770px) {\r\n            width: 100%;\r\n            height: 40%;\r\n            position: absolute;\r\n            top: 0;\r\n        }\r\n\r\n        .inner-content {\r\n            @extend {\r\n                position: absolute;\r\n                top: 50%;\r\n                transform: translateY(-50%);\r\n            }\r\n\r\n            @media (max-width: 770px) {\r\n                position: relative;\r\n                padding: 1rem 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    .heading {\r\n        text-align: center;\r\n        font-size: 9em;\r\n        line-height: 1.3em;\r\n        margin: 2rem 0 0.5rem 0;\r\n        padding: 0;\r\n        text-shadow: 0 0 1rem #fefefe;\r\n\r\n        @media (max-width: 770px) {\r\n            font-size: 7em;\r\n            line-height: 1.15;\r\n            margin: 0;\r\n        }\r\n    }\r\n\r\n    .subheading {\r\n        text-align: center;\r\n        max-width: 480px;\r\n        font-size: 1.5em;\r\n        line-height: 1.15em;\r\n        padding: 0 1rem;\r\n        margin: 0 auto;\r\n\r\n        @media (max-width: 770px) {\r\n            font-size: 1.3em;\r\n            line-height: 1.15;\r\n            max-width: 100%;\r\n        }\r\n    }\r\n\r\n    .link {\r\n        text-align: center;\r\n        font-size: 2em;\r\n        paddding: 1rem;\r\n        margin-top: 10%;\r\n        color: #FFF;\r\n        text-decoration: none;\r\n    }\r\n\r\n    .right-section {\r\n        width: 50%;\r\n        top: 1 rem;\r\n        @media (max-width: 770px) {\r\n            width: 100%;\r\n            height: 60%;\r\n            position: absolute;\r\n            bottom: 0;\r\n        }\r\n    }\r\n\r\n    .svgimg {\r\n        position: absolute;\r\n        bottom: 0;\r\n        padding-top: 10vh;\r\n        padding-left: 1vh;\r\n        max-width: 100%;\r\n        max-height: 100%;\r\n\r\n        @media (max-width: 770px) {\r\n            padding: 0;\r\n        }\r\n\r\n        .bench-legs {\r\n            fill: #0C0E10;\r\n        }\r\n\r\n        .top-bench, .bottom-bench {\r\n            stroke: #0C0E10;\r\n            stroke-width: 1px;\r\n            fill: #5B3E2B;\r\n        }\r\n\r\n        .bottom-bench path:nth-child(1) {\r\n            fill: darken(#5B3E2B,7%);\r\n        }\r\n\r\n        .lamp-details {\r\n            fill: #202425;\r\n        }\r\n\r\n        .lamp-accent {\r\n            fill: lighten(#202425, 5%);\r\n        }\r\n\r\n        .lamp-bottom {\r\n            fill: linear-gradient(#202425, #0C0E10);\r\n        }\r\n\r\n        .lamp-light {\r\n            fill: #EFEFEF;\r\n        }\r\n\r\n        @keyframes glow {\r\n            0% \r\n            text-shadow: 0 0 1rem #fefefe\r\n        50% \r\n            text-shadow: 0 0 1.85rem #ededed\r\n        100%\r\n            text-shadow: 0 0 1rem #fefefe\r\n        }\r\n        \r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { StyledNotFound } from \"../components/styles/NotFoundStyle\";\r\n\r\nconst NotFoundPage = () => {\r\n  return (\r\n    <StyledNotFound>\r\n      <div className=\"background\">\r\n        <div className=\"ground\"></div>\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"left-section\">\r\n          <div className=\"inner-content\">\r\n            <h1 className=\"heading\">404</h1>\r\n            <p className=\"subheading\">\r\n              Looks like the page you were looking for is no longer here.\r\n            </p>\r\n            <Link to='/React-IMDb'>\r\n              <p className=\"link\">\r\n                Go Back Home\r\n              </p>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"right-section\">\r\n          <svg\r\n            className=\"svgimg\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"51.5 -15.288 385 505.565\"\r\n          >\r\n            <g className=\"bench-legs\">\r\n              <path\r\n                d=\"M202.778,391.666h11.111v98.611h-11.111V391.666z M370.833,390.277h11.111v100h-11.111V390.277z M183.333,456.944h11.111\r\n            v33.333h-11.111V456.944z M393.056,456.944h11.111v33.333h-11.111V456.944z\"\r\n              />\r\n            </g>\r\n            <g className=\"top-bench\">\r\n              <path\r\n                d=\"M396.527,397.917c0,1.534-1.243,2.777-2.777,2.777H190.972c-1.534,0-2.778-1.243-2.778-2.777v-8.333\r\n            c0-1.535,1.244-2.778,2.778-2.778H393.75c1.534,0,2.777,1.243,2.777,2.778V397.917z M400.694,414.583\r\n            c0,1.534-1.243,2.778-2.777,2.778H188.194c-1.534,0-2.778-1.244-2.778-2.778v-8.333c0-1.534,1.244-2.777,2.778-2.777h209.723\r\n            c1.534,0,2.777,1.243,2.777,2.777V414.583z M403.473,431.25c0,1.534-1.244,2.777-2.778,2.777H184.028\r\n            c-1.534,0-2.778-1.243-2.778-2.777v-8.333c0-1.534,1.244-2.778,2.778-2.778h216.667c1.534,0,2.778,1.244,2.778,2.778V431.25z\"\r\n              />\r\n            </g>\r\n            <g className=\"bottom-bench\">\r\n              <path\r\n                d=\"M417.361,459.027c0,0.769-1.244,1.39-2.778,1.39H170.139c-1.533,0-2.777-0.621-2.777-1.39v-4.86\r\n            c0-0.769,1.244-0.694,2.777-0.694h244.444c1.534,0,2.778-0.074,2.778,0.694V459.027z\"\r\n              />\r\n              <path d=\"M185.417,443.75H400c0,0,18.143,9.721,17.361,10.417l-250-0.696C167.303,451.65,185.417,443.75,185.417,443.75z\" />\r\n            </g>\r\n            <g id=\"lamp\">\r\n              <path\r\n                className=\"lamp-details\"\r\n                d=\"M125.694,421.997c0,1.257-0.73,3.697-1.633,3.697H113.44c-0.903,0-1.633-2.44-1.633-3.697V84.917\r\n            c0-1.257,0.73-2.278,1.633-2.278h10.621c0.903,0,1.633,1.02,1.633,2.278V421.997z\"\r\n              />\r\n              <path\r\n                className=\"lamp-accent\"\r\n                d=\"M128.472,93.75c0,1.534-1.244,2.778-2.778,2.778h-13.889c-1.534,0-2.778-1.244-2.778-2.778V79.861\r\n            c0-1.534,1.244-2.778,2.778-2.778h13.889c1.534,0,2.778,1.244,2.778,2.778V93.75z\"\r\n              />\r\n\r\n              <circle className=\"lamp-light\" cx=\"119.676\" cy=\"44.22\" r=\"40.51\" />\r\n              <path\r\n                className=\"lamp-details\"\r\n                d=\"M149.306,71.528c0,3.242-13.37,13.889-29.861,13.889S89.583,75.232,89.583,71.528c0-4.166,13.369-13.889,29.861-13.889\r\n            S149.306,67.362,149.306,71.528z\"\r\n              />\r\n              <radialGradient\r\n                className=\"light-gradient\"\r\n                id=\"SVGID_1_\"\r\n                cx=\"119.676\"\r\n                cy=\"44.22\"\r\n                r=\"65\"\r\n                gradientUnits=\"userSpaceOnUse\"\r\n              >\r\n                <stop offset=\"0%\" style={{stopColor:'#FFFFFF', stopOpacity: 1}} />\r\n                <stop\r\n                  offset=\"50%\"\r\n                  style={{stopColor:'#EDEDED', stopOpacity: 0.5}}\r\n                >\r\n                  <animate\r\n                    attributeName=\"stop-opacity\"\r\n                    values=\"0.0; 0.5; 0.0\"\r\n                    dur=\"5000ms\"\r\n                    repeatCount=\"indefinite\"\r\n                  ></animate>\r\n                </stop>\r\n                <stop\r\n                  offset=\"100%\"\r\n                  style={{stopColor:'#EDEDED', stopOpacity: 0}}\r\n                />\r\n              </radialGradient>\r\n              <circle\r\n                className=\"lamp-light__glow\"\r\n                fill=\"url(#SVGID_1_)\"\r\n                cx=\"119.676\"\r\n                cy=\"44.22\"\r\n                r=\"65\"\r\n              />\r\n              <path\r\n                className=\"lamp-bottom\"\r\n                d=\"M135.417,487.781c0,1.378-1.244,2.496-2.778,2.496H106.25c-1.534,0-2.778-1.118-2.778-2.496v-74.869\r\n            c0-1.378,1.244-2.495,2.778-2.495h26.389c1.534,0,2.778,1.117,2.778,2.495V487.781z\"\r\n              />\r\n            </g>\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </StyledNotFound>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`;\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\n// Components\r\nimport Header from './components/elements/Header';\r\nimport HomePage from './pages/HomePage';\r\n\r\nimport MoviePage from './pages/MoviePage';\r\nimport MoviesPage from './pages/MoviesPage';\r\n\r\nimport ShowsPage from './pages/ShowsPage';\r\nimport ShowPage from './pages/ShowPage';\r\nimport ShowSeasonPage from './pages/ShowSeasonPage';\r\n\r\nimport GenrePage from './pages/GenrePage';\r\n\r\nimport ActorPage from './pages/ActorPage';\r\n\r\nimport NotFoundPage from './pages/NotFoundPage';\r\n\r\nimport { GlobalStyle } from './components/styles/GlobalStyle';\r\n\r\nconst App = () => (\r\n    <Router>\r\n        <Header />\r\n        <Switch>\r\n            <Route exact path='/React-IMDB' component={HomePage} />\r\n            <Route exact path='/React-IMDB/movies/:movieId' component={MoviePage} />\r\n            <Route exact path='/React-IMDB/movies' component={MoviesPage} />\r\n\r\n            <Route exact path='/React-IMDB/genre/:genreName/:genreId' component={GenrePage} />\r\n\r\n            <Route exact path='/React-IMDB/shows' component={ShowsPage} />\r\n            <Route exact path='/React-IMDB/shows/:showId' component={ShowPage} />\r\n            <Route exact path='/React-IMDB/shows/:showId/season/:seasonNumber' component={ShowSeasonPage} />\r\n\r\n            <Route exact path='/React-IMDB/people/:actorId' component={ActorPage} />\r\n\r\n            <Route exact path=\"/React-IMDB/404\" component={NotFoundPage} />\r\n            <Redirect to=\"/React-IMDB/404\" />\r\n            <Route path=\"*\" component={NotFoundPage} />\r\n \r\n        </Switch>\r\n        <GlobalStyle />\r\n    </Router>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}